(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    167937,       3551]
NotebookOptionsPosition[    165866,       3480]
NotebookOutlinePosition[    166242,       3496]
CellTagsIndexPosition[    166199,       3493]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["File informations", "Section",
 CellChangeTimes->{{3.5347672644829855`*^9, 3.5347672666750793`*^9}, {
  3.6471203040987425`*^9, 3.6471203085299964`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Clear", " ", "all", " ", "values"}], "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}], "\n", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Set", " ", "rawdata", " ", "folder", " ", "and", " ", "output", " ", 
     "data", " ", "folder"}], "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dir", "=", 
     RowBox[{"SetDirectory", "[", 
      RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.643577092579533*^9, 3.6435771188990383`*^9}, {
   3.643584194450737*^9, 3.643584200378076*^9}, {3.643584347426487*^9, 
   3.643584349322595*^9}, {3.643585217570256*^9, 3.64358523023398*^9}, {
   3.647117838842738*^9, 3.6471178649142294`*^9}, {3.647119803511111*^9, 
   3.64711986049137*^9}, {3.647120081693022*^9, 3.647120087797371*^9}, 
   3.6471201593804655`*^9, {3.6471202480775385`*^9, 3.6471202892288923`*^9}, {
   3.647120595630417*^9, 3.6471205974695225`*^9}, {3.6471214480851746`*^9, 
   3.6471214906846113`*^9}},
 Background->RGBColor[1, 0.925, 0.925]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Filename", " ", "of", " ", "rawdata"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"filename", "=", "\"\<AVG.xlsx\>\""}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{
  3.647121877958762*^9, {3.6471221274580326`*^9, 3.647122127722048*^9}, 
   3.8767606093121166`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Import", " ", "data", " ", "and", " ", "Remove", " ", "comment", " ", 
    "line"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"raw", "=", 
     RowBox[{
      RowBox[{"Import", "[", "filename", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"Drop", "[", 
         RowBox[{"raw", ",", "1"}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SD", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Drop", "[", 
        RowBox[{"raw", ",", "1"}], "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", "data", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8767606978890023`*^9, 3.8767606999075766`*^9}, {
  3.8767636371742496`*^9, 3.8767636385656695`*^9}},
 Background->RGBColor[1, 0.925, 0.925]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwt0w1IU1EUB/A1xUZImJVlWFpEi0xalEiG+ZfMirJMI0zCYtQKkRSyRWql
zo/UFGPah0uj9N4rYRYmQ3SYhIwyK8tRVESKRVBphYJSKN23ew6Mx4+z+975
eG+lOSv5hF6n08XIn3b1Rj7DM2vP7WXDNnhdyvD8zg7nxMli5RqG0JIfBzrt
5HqGwrrtlZmmEuVmhvqbMhrJbQxXx/JjI7vJnQwHR5mjz6dU+QlDUtX104GP
KD9Az4+k/FuGrt3++nAP5YcZ/LQHzqX8dwZXjn2p7yzlJxm4oy/s4RR5lmEo
0RyQGk3/N3C8a8qOmbecHMhx5pSsMJgcwrGl46m1J5S8hqPFvSeq/CjZxDGd
IhsYo/tHcyxq2zmSG07ziOe4EBuZ3mUrUt7H8WJAxutC5VSOe3/eJJqTKG/m
eP9yKmXUUqCcyXF86+f9Vd15ylaOgFRZUdF55QKOcTnO9Dg6X0H5MaqvlsP3
0PyIdge5kWOTFlaqt4UjvjLz2788qred41KGnGAU2UXzmEN2c3SukAvXkQc5
fgttIPR+fOBqX+vJXzgSnBMzHh/yOMdGQ2tIWjOdn+ZYojVsqFDWC5yTxzdc
rlb2F+r+Q1eUgwQsWhjLlMMEsgJtvf1N1M86gfaGX8J9tkZ5s8DfixmuyQXX
lLcJ1f8IeZdAhDxgfFynnCzgXbeNfESo/SWQLQKfVvsVLp6pVc4WOPZ1cNXH
DnKuwN6o8rhhJ7lY9fNgIblawCgHcMtIviGQJhf8ai35roA+vCzocBy5VXi/
p5/VdmWn8L7PJkHuFdDW2zBB7hcIlgu/7yB7qL8cO/4DJao68g==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2745.3125, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{2750., 3050.}, {0, 1464.3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.647121548428914*^9, 3.6471218814969645`*^9, 
  3.647122131045238*^9, 3.6471223141657124`*^9, 3.6471223612324038`*^9, 
  3.8767606170220304`*^9, 3.8767607013821325`*^9, 3.876761203886381*^9, 
  3.876762058508899*^9, 3.876762293418496*^9, 3.8767628035488143`*^9, 
  3.876763643070592*^9, 3.876764021298009*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SFG model", "Section",
 CellChangeTimes->{{3.538348303640625*^9, 3.538348308953125*^9}, {
  3.6471203136342883`*^9, 3.6471203172094927`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Number", " ", "of", " ", "peak"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PkNo", "=", "6"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Fittinh", " ", "model"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S", "[", "1", "]"}], "=", 
     FractionBox["a1", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"w", "-", "w1"}], ")"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "f1"}]}]]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S", "[", "2", "]"}], "=", 
     FractionBox["a2", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"w", "-", "w2"}], ")"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "f2"}]}]]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S", "[", "3", "]"}], "=", 
     FractionBox["a3", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"w", "-", "w3"}], ")"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "f3"}]}]]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S", "[", "4", "]"}], "=", 
     FractionBox["a4", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"w", "-", "w4"}], ")"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "f4"}]}]]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S", "[", "5", "]"}], "=", 
     FractionBox["a5", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"w", "-", "w5"}], ")"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "f5"}]}]]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"S", "[", "6", "]"}], "=", 
     FractionBox["a6", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"w", "-", "w6"}], ")"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "f6"}]}]]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NR", "=", 
     RowBox[{"n", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "p"}]]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SFG", "=", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"(", 
        RowBox[{"NR", "+", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"i", "=", "1"}], "PkNo"], 
          RowBox[{"S", "[", "i", "]"}]}]}], ")"}], "]"}], "^", "2"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Type", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"variables", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "n", ",", "p", ",", "\[IndentingNewLine]", "a1", ",", "a2", ",", "a3", 
       ",", "a4", ",", "a5", ",", "a6", ",", "\[IndentingNewLine]", "w1", ",",
        "w2", ",", "w3", ",", "w4", ",", "w5", ",", "w6", ",", 
       "\[IndentingNewLine]", "f1", ",", "f2", ",", "f3", ",", "f4", ",", 
       "f5", ",", "f6"}], "\[IndentingNewLine]", "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.538346401703125*^9, 3.53834642434375*^9}, {
   3.538347946546875*^9, 3.53834798840625*^9}, {3.53834803059375*^9, 
   3.53834803196875*^9}, 3.643581178458232*^9, 3.643582386059303*^9, {
   3.643582428826749*^9, 3.643582484281921*^9}, {3.643582618799615*^9, 
   3.6435826655182867`*^9}, 3.6435830455680246`*^9, 3.64358417545065*^9, {
   3.6435842435695467`*^9, 3.6435842441865816`*^9}, {3.6435843138685675`*^9, 
   3.643584314505604*^9}, 3.6471198729520826`*^9, {3.647120162015616*^9, 
   3.6471201738722944`*^9}, {3.6471203229278197`*^9, 
   3.6471203567877564`*^9}, {3.647120471839337*^9, 3.64712047452649*^9}, {
   3.647120514516778*^9, 3.647120533124842*^9}, {3.647120589699078*^9, 
   3.647120667730541*^9}, 3.647120776068738*^9, {3.6471213228060093`*^9, 
   3.647121351971678*^9}, {3.647121412124118*^9, 3.6471214198485603`*^9}, {
   3.647122135941518*^9, 3.647122151797425*^9}, 3.876760623973217*^9, 
   3.87676075281693*^9, {3.876760974984182*^9, 3.8767609769915495`*^9}, {
   3.8767611735242233`*^9, 3.8767611768966703`*^9}, 3.8767617866897945`*^9, {
   3.876761999376772*^9, 3.87676202871183*^9}},
 Background->RGBColor[1, 0.925, 0.925]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Build", " ", "your", " ", "initial", " ", "parameter"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Initialvalues", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "31.7", ",", "5.57", ",", "\[IndentingNewLine]", "16.6", ",", "73.2", 
      ",", "82", ",", "182.5", ",", 
      RowBox[{"-", "31.6"}], ",", "60.6", ",", "\[IndentingNewLine]", 
      "2854.2", ",", "2876.9", ",", "2907.3", ",", "2938.7", ",", "2946.6", 
      ",", "2962.8", ",", "\[IndentingNewLine]", "7.26`", ",", "8.3", ",", 
      "19.2", ",", "15.8", ",", "7.1", ",", "4.9"}], "\[IndentingNewLine]", 
     "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.647121345168288*^9, 3.6471213561609173`*^9}, {
   3.647121842656743*^9, 3.6471218600557384`*^9}, {3.647122168579385*^9, 
   3.6471222167931423`*^9}, {3.647122329846609*^9, 3.647122332125739*^9}, 
   3.8767607590557933`*^9, 3.8767609801265554`*^9, {3.8767611802005763`*^9, 
   3.8767611839418106`*^9}, {3.8767617907124133`*^9, 3.876761791653178*^9}, {
   3.8767620027249355`*^9, 3.876762003101217*^9}, {3.876762039669354*^9, 
   3.8767620495249968`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.647121345168288*^9, 3.6471213561609173`*^9}, {
   3.647121842656743*^9, 3.6471218600557384`*^9}, {3.647122168579385*^9, 
   3.6471222167931423`*^9}, {3.647122329846609*^9, 3.647122332125739*^9}, 
   3.8767607590557933`*^9, 3.8767609801265554`*^9, {3.8767611802005763`*^9, 
   3.8767611839418106`*^9}, {3.8767617907124133`*^9, 3.876761791653178*^9}, {
   3.8767620027249355`*^9, 3.876762003101217*^9}, {3.876762039669354*^9, 
   3.8767620469841733`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["SFG simulation", "Section",
 CellChangeTimes->{{3.538348303640625*^9, 3.538348308953125*^9}, {
  3.6471203136342883`*^9, 3.6471203172094927`*^9}, {3.647121111779939*^9, 
  3.6471211133390284`*^9}}],

Cell[CellGroupData[{

Cell["Code for SFG simulation program", "Subsection",
 CellChangeTimes->{{3.5713570831410403`*^9, 3.571357100243018*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Panel", "[", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"SFG", "/.", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"n", "\[Rule]", 
                RowBox[{"Initial", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"p", "\[Rule]", 
                RowBox[{"Initial", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"a1", "\[Rule]", 
                RowBox[{"Initial", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], ",", 
               RowBox[{"a2", "\[Rule]", 
                RowBox[{"Initial", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], ",", 
               RowBox[{"a3", "\[Rule]", 
                RowBox[{"Initial", "[", 
                 RowBox[{"[", "5", "]"}], "]"}]}], ",", 
               RowBox[{"a4", "\[Rule]", 
                RowBox[{"Initial", "[", 
                 RowBox[{"[", "6", "]"}], "]"}]}], ",", 
               RowBox[{"a5", "\[Rule]", 
                RowBox[{"Initial", "[", 
                 RowBox[{"[", "7", "]"}], "]"}]}], ",", 
               RowBox[{"a6", "\[Rule]", 
                RowBox[{"Initial", "[", 
                 RowBox[{"[", "8", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"w1", "\[Rule]", 
                RowBox[{"Initial", "[", 
                 RowBox[{"[", "9", "]"}], "]"}]}], ",", 
               RowBox[{"w2", "\[Rule]", 
                RowBox[{"Initial", "[", 
                 RowBox[{"[", "10", "]"}], "]"}]}], ",", 
               RowBox[{"w3", "\[Rule]", 
                RowBox[{"Initial", "[", 
                 RowBox[{"[", "11", "]"}], "]"}]}], ",", 
               RowBox[{"w4", "\[Rule]", 
                RowBox[{"Initial", "[", 
                 RowBox[{"[", "12", "]"}], "]"}]}], ",", 
               RowBox[{"w5", "\[Rule]", 
                RowBox[{"Initial", "[", 
                 RowBox[{"[", "13", "]"}], "]"}]}], ",", 
               RowBox[{"w6", "\[Rule]", 
                RowBox[{"Initial", "[", 
                 RowBox[{"[", "14", "]"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"f1", "\[Rule]", 
                RowBox[{"Initial", "[", 
                 RowBox[{"[", "15", "]"}], "]"}]}], ",", 
               RowBox[{"f2", "\[Rule]", 
                RowBox[{"Initial", "[", 
                 RowBox[{"[", "16", "]"}], "]"}]}], ",", 
               RowBox[{"f3", "\[Rule]", 
                RowBox[{"Initial", "[", 
                 RowBox[{"[", "17", "]"}], "]"}]}], ",", 
               RowBox[{"f4", "\[Rule]", 
                RowBox[{"Initial", "[", 
                 RowBox[{"[", "18", "]"}], "]"}]}], ",", 
               RowBox[{"f5", "\[Rule]", 
                RowBox[{"Initial", "[", 
                 RowBox[{"[", "19", "]"}], "]"}]}], ",", 
               RowBox[{"f6", "\[Rule]", 
                RowBox[{"Initial", "[", 
                 RowBox[{"[", "20", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
              "}"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"w", ",", 
              RowBox[{"data", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", " ", 
              RowBox[{"data", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "650"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ListPlot", "[", "data", "]"}]}], "]"}], 
        "\[IndentingNewLine]", "]"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<constraints\>\"", 
        RowBox[{"Panel", "[", "\[IndentingNewLine]", 
         RowBox[{"constraints", "=", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", "table", "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"table", "=", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Which", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"EnableLL", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "True"}], "&&", 
                   RowBox[{
                    RowBox[{"EnableUL", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "True"}]}], 
                  ",", 
                  RowBox[{
                   RowBox[{"LL", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "<", 
                   RowBox[{"variables", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "<", 
                   RowBox[{"UL", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"EnableLL", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "True"}], "&&", 
                   RowBox[{
                    RowBox[{"EnableUL", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "False"}]}], 
                  ",", 
                  RowBox[{
                   RowBox[{"LL", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "<", 
                   RowBox[{"variables", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"EnableLL", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "False"}], "&&", 
                   RowBox[{
                    RowBox[{"EnableUL", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "True"}]}], 
                  ",", 
                  RowBox[{
                   RowBox[{"variables", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "<", 
                   RowBox[{"UL", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"EnableLL", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "False"}], "&&", 
                   RowBox[{
                    RowBox[{"EnableUL", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "False"}]}], 
                  ",", "false"}], "\[IndentingNewLine]", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "[", "variables", "]"}]}], "}"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"Delete", "[", 
              RowBox[{"table", ",", 
               RowBox[{"Position", "[", 
                RowBox[{"table", ",", "false"}], "]"}]}], "]"}]}]}], "]"}]}], 
         "]"}]}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<initialparameter\>\"", 
        RowBox[{"Panel", "[", "\[IndentingNewLine]", 
         RowBox[{"initialparameter", "=", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"variables", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
             RowBox[{"Initial", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "variables", "]"}]}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"LL", ",", 
     RowBox[{"{", 
      RowBox[{"Initialvalues", "-", "5"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"EnableLL", ",", 
     RowBox[{"{", 
      RowBox[{"Table", "[", 
       RowBox[{"True", ",", 
        RowBox[{"{", 
         RowBox[{"Length", "[", "variables", "]"}], "}"}]}], "]"}], "}"}], 
     ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Initial", ",", 
     RowBox[{"{", "Initialvalues", "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"EnableUL", ",", 
     RowBox[{"{", 
      RowBox[{"Table", "[", 
       RowBox[{"True", ",", 
        RowBox[{"{", 
         RowBox[{"Length", "[", "variables", "]"}], "}"}]}], "]"}], "}"}], 
     ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"UL", ",", 
     RowBox[{"{", 
      RowBox[{"Initialvalues", "+", "5"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Panel", "[", 
    RowBox[{"Grid", "[", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{"variables", ",", "\"\<variable\>\""}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Outer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"InputField", "[", 
              RowBox[{
               RowBox[{"Dynamic", "[", 
                RowBox[{"LL", "[", 
                 RowBox[{"[", "#1", "]"}], "]"}], "]"}], ",", 
               RowBox[{"FieldSize", "\[Rule]", "4"}], ",", 
               RowBox[{"Enabled", "->", 
                RowBox[{"Dynamic", "[", 
                 RowBox[{"EnableLL", "[", 
                  RowBox[{"[", "#1", "]"}], "]"}], "]"}]}]}], "]"}], "&"}], 
            ",", 
            RowBox[{"Range", "[", 
             RowBox[{"Length", "[", "variables", "]"}], "]"}]}], "]"}], ",", 
          "\"\<LL\>\""}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Outer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Checkbox", "[", 
              RowBox[{
               RowBox[{"Dynamic", "[", 
                RowBox[{"EnableLL", "[", 
                 RowBox[{"[", "#1", "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"False", ",", "True"}], "}"}]}], "]"}], "&"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"Length", "[", "variables", "]"}], "]"}]}], "]"}], ",", 
          "\"\<<\>\""}], "]"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Outer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Slider", "[", 
              RowBox[{
               RowBox[{"Dynamic", "[", 
                RowBox[{"Initial", "[", 
                 RowBox[{"[", "#1", "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Dynamic", "[", 
                  RowBox[{"LL", "[", 
                   RowBox[{"[", "#1", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"Dynamic", "[", 
                  RowBox[{"UL", "[", 
                   RowBox[{"[", "#1", "]"}], "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "100"}]}], "]"}], "&"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"Length", "[", "variables", "]"}], "]"}]}], "]"}], ",", 
          "\"\<Initial\>\""}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Outer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Panel", "[", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"Initial", "[", 
                RowBox[{"[", "#1", "]"}], "]"}], "]"}], "]"}], "&"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"Length", "[", "variables", "]"}], "]"}]}], "]"}], ",", 
          "\"\<\>\""}], "]"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Outer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Checkbox", "[", 
              RowBox[{
               RowBox[{"Dynamic", "[", 
                RowBox[{"EnableUL", "[", 
                 RowBox[{"[", "#1", "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"False", ",", "True"}], "}"}]}], "]"}], "&"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"Length", "[", "variables", "]"}], "]"}]}], "]"}], ",", 
          "\"\<<\>\""}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Outer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"InputField", "[", 
              RowBox[{
               RowBox[{"Dynamic", "[", 
                RowBox[{"UL", "[", 
                 RowBox[{"[", "#1", "]"}], "]"}], "]"}], ",", 
               RowBox[{"FieldSize", "\[Rule]", "4"}], ",", 
               RowBox[{"Enabled", "->", 
                RowBox[{"Dynamic", "[", 
                 RowBox[{"EnableUL", "[", 
                  RowBox[{"[", "#1", "]"}], "]"}], "]"}]}]}], "]"}], "&"}], 
            ",", 
            RowBox[{"Range", "[", 
             RowBox[{"Length", "[", "variables", "]"}], "]"}]}], "]"}], ",", 
          "\"\<UL\>\""}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], "]"}],
     "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.556982681673375*^9, 3.5569828655969095`*^9}, {
   3.5569829196447372`*^9, 3.556982926637137*^9}, {3.5569829607812843`*^9, 
   3.5569829618593454`*^9}, {3.556983005055697*^9, 3.5569830372139025`*^9}, {
   3.55698307670253*^9, 3.556983082030424*^9}, {3.5569831663017282`*^9, 
   3.5569832612965045`*^9}, {3.5569833757938595`*^9, 
   3.5569835743456607`*^9}, {3.5569840489812393`*^9, 3.556984108086007*^9}, {
   3.556984154447421*^9, 3.556984202575032*^9}, {3.556984232750147*^9, 
   3.5569843339170966`*^9}, 3.5569843777241707`*^9, {3.556984407825867*^9, 
   3.5569845594523106`*^9}, {3.5569848126546803`*^9, 
   3.5569848486507387`*^9}, {3.55698639623245*^9, 3.556986415272539*^9}, {
   3.5569864826942024`*^9, 3.5569865572012715`*^9}, {3.5569964799524403`*^9, 
   3.556996480545474*^9}, {3.5569965716996183`*^9, 3.556996583073269*^9}, 
   3.5569966880492706`*^9, {3.556996736432435*^9, 3.556996739570411*^9}, {
   3.5569968148173914`*^9, 3.5569968480204315`*^9}, {3.5569968826894145`*^9, 
   3.556997252274029*^9}, {3.556997466970279*^9, 3.556997566487383*^9}, {
   3.5569976219727097`*^9, 3.556997707010404*^9}, {3.556997852458495*^9, 
   3.556997857654792*^9}, {3.5569980242849507`*^9, 3.5569980581195335`*^9}, {
   3.556998391364112*^9, 3.55699840625996*^9}, {3.5569985752671576`*^9, 
   3.5569985804832478`*^9}, {3.556998749443033*^9, 3.5569987819469852`*^9}, {
   3.556998832650408*^9, 3.5569989038840313`*^9}, {3.556998959982682*^9, 
   3.5569989657580123`*^9}, {3.5569990568785367`*^9, 3.5569990591346655`*^9}, 
   3.5570000838849754`*^9, {3.5570001150217566`*^9, 3.5570003005402517`*^9}, {
   3.5570004370876255`*^9, 3.5570004706541615`*^9}, {3.55700052074841*^9, 
   3.557000565197204*^9}, {3.5570008803161306`*^9, 3.557000883802725*^9}, {
   3.557000915188247*^9, 3.5570010576431103`*^9}, {3.557001768966381*^9, 
   3.5570018648373113`*^9}, {3.571357669345569*^9, 3.5713576735828114`*^9}, {
   3.571357706194677*^9, 3.5713577573296013`*^9}, {3.571357856348265*^9, 
   3.5713579890908575`*^9}, 3.57135802707703*^9, {3.5727908384848433`*^9, 
   3.572790839212885*^9}, {3.6471174766090193`*^9, 3.647117496872179*^9}, {
   3.647117970223253*^9, 3.647118148046424*^9}, {3.647118352034091*^9, 
   3.647118354952258*^9}, {3.647118700707034*^9, 3.6471187507348957`*^9}, {
   3.6471188139465113`*^9, 3.6471188353757367`*^9}, {3.6471189078248806`*^9, 
   3.6471189310792103`*^9}, {3.647118990023582*^9, 3.6471190476208763`*^9}, {
   3.647119098747801*^9, 3.647119116872837*^9}, {3.6471191784673605`*^9, 
   3.64711922479501*^9}, {3.6471192758729315`*^9, 3.647119391966572*^9}, {
   3.6471194619815764`*^9, 3.6471194955484962`*^9}, {3.6471195355657854`*^9, 
   3.6471196131632233`*^9}, {3.647119663137082*^9, 3.6471197111458282`*^9}, {
   3.647120828331727*^9, 3.6471208331480026`*^9}, {3.647120916962796*^9, 
   3.6471209184178796`*^9}, {3.647121267339837*^9, 3.647121296729518*^9}, {
   3.647122253167223*^9, 3.647122288975271*^9}, {3.6471223470965953`*^9, 
   3.6471223512418327`*^9}, 3.8767624508899956`*^9},
 Background->RGBColor[1, 0.925, 0.925]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`EnableLL$$ = {
    True, True, True, True, True, True, True, True, True, True, True, True, 
     True, True, True, True, True, True, True, 
     True}, $CellContext`EnableUL$$ = {
    True, True, True, True, True, True, True, True, True, True, True, True, 
     True, True, True, True, True, True, True, 
     True}, $CellContext`Initial$$ = {
    31.7, 5.57, 16.6, 73.2, 82, 182.5, -31.6, 60.6, 2854.2, 2876.9, 2907.3, 
     2938.7, 2946.6, 2962.8, 7.26, 8.3, 19.2, 15.8, 7.1, 
     4.9}, $CellContext`LL$$ = {
    26.7, 0.5700000000000003, 11.600000000000001`, 68.2, 77, 177.5, -36.6, 
     55.6, 2849.2, 2871.9, 2902.3, 2933.7, 2941.6, 2957.8, 2.26, 
     3.3000000000000007`, 14.2, 10.8, 
     2.0999999999999996`, -0.09999999999999964}, $CellContext`UL$$ = {
    36.7, 10.57, 21.6, 78.2, 87, 187.5, -26.6, 65.6, 2859.2, 2881.9, 2912.3, 
     2943.7, 2951.6, 2967.8, 12.26, 13.3, 24.2, 20.8, 12.1, 9.9}, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`LL$$], {{
       26.7, 0.5700000000000003, 11.600000000000001`, 68.2, 77, 177.5, -36.6, 
        55.6, 2849.2, 2871.9, 2902.3, 2933.7, 2941.6, 2957.8, 2.26, 
        3.3000000000000007`, 14.2, 10.8, 
        2.0999999999999996`, -0.09999999999999964}}}, {
      Hold[$CellContext`EnableLL$$], {{
       True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True}}}, {
      Hold[$CellContext`Initial$$], {{
       31.7, 5.57, 16.6, 73.2, 82, 182.5, -31.6, 60.6, 2854.2, 2876.9, 2907.3,
         2938.7, 2946.6, 2962.8, 7.26, 8.3, 19.2, 15.8, 7.1, 4.9}}}, {
      Hold[$CellContext`EnableUL$$], {{
       True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True}}}, {
      Hold[$CellContext`UL$$], {{
       36.7, 10.57, 21.6, 78.2, 87, 187.5, -26.6, 65.6, 2859.2, 2881.9, 
        2912.3, 2943.7, 2951.6, 2967.8, 12.26, 13.3, 24.2, 20.8, 12.1, 
        9.9}}}, {
      Hold[
       Panel[
        Grid[{{
          "variable", "LL", "<", "Initial", "", "<", "UL"}, {$CellContext`n, 
           InputField[
            Dynamic[
             Part[$CellContext`LL$$, 1]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableLL$$, 1]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableLL$$, 1]], {False, True}], 
           Slider[
            Dynamic[
             BoxForm`RemapVariable[
              Part[$CellContext`Initial$$, 1], {
               Part[$CellContext`LL$$, 1], 
               Part[$CellContext`UL$$, 1]}], BoxForm`RemapValue[#, 
              Part[$CellContext`Initial$$, 1], {
               Part[$CellContext`LL$$, 1], 
               Part[$CellContext`UL$$, 1]}]& ], {0, 1}, ImageSize -> 100], 
           Panel[
            Dynamic[
             Part[$CellContext`Initial$$, 1]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableUL$$, 1]], {False, True}], 
           InputField[
            Dynamic[
             Part[$CellContext`UL$$, 1]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableUL$$, 1]]]}, {$CellContext`p, 
           InputField[
            Dynamic[
             Part[$CellContext`LL$$, 2]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableLL$$, 2]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableLL$$, 2]], {False, True}], 
           Slider[
            Dynamic[
             BoxForm`RemapVariable[
              Part[$CellContext`Initial$$, 2], {
               Part[$CellContext`LL$$, 2], 
               Part[$CellContext`UL$$, 2]}], BoxForm`RemapValue[#, 
              Part[$CellContext`Initial$$, 2], {
               Part[$CellContext`LL$$, 2], 
               Part[$CellContext`UL$$, 2]}]& ], {0, 1}, ImageSize -> 100], 
           Panel[
            Dynamic[
             Part[$CellContext`Initial$$, 2]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableUL$$, 2]], {False, True}], 
           InputField[
            Dynamic[
             Part[$CellContext`UL$$, 2]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableUL$$, 2]]]}, {$CellContext`a1, 
           InputField[
            Dynamic[
             Part[$CellContext`LL$$, 3]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableLL$$, 3]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableLL$$, 3]], {False, True}], 
           Slider[
            Dynamic[
             BoxForm`RemapVariable[
              Part[$CellContext`Initial$$, 3], {
               Part[$CellContext`LL$$, 3], 
               Part[$CellContext`UL$$, 3]}], BoxForm`RemapValue[#, 
              Part[$CellContext`Initial$$, 3], {
               Part[$CellContext`LL$$, 3], 
               Part[$CellContext`UL$$, 3]}]& ], {0, 1}, ImageSize -> 100], 
           Panel[
            Dynamic[
             Part[$CellContext`Initial$$, 3]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableUL$$, 3]], {False, True}], 
           InputField[
            Dynamic[
             Part[$CellContext`UL$$, 3]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableUL$$, 3]]]}, {$CellContext`a2, 
           InputField[
            Dynamic[
             Part[$CellContext`LL$$, 4]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableLL$$, 4]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableLL$$, 4]], {False, True}], 
           Slider[
            Dynamic[
             BoxForm`RemapVariable[
              Part[$CellContext`Initial$$, 4], {
               Part[$CellContext`LL$$, 4], 
               Part[$CellContext`UL$$, 4]}], BoxForm`RemapValue[#, 
              Part[$CellContext`Initial$$, 4], {
               Part[$CellContext`LL$$, 4], 
               Part[$CellContext`UL$$, 4]}]& ], {0, 1}, ImageSize -> 100], 
           Panel[
            Dynamic[
             Part[$CellContext`Initial$$, 4]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableUL$$, 4]], {False, True}], 
           InputField[
            Dynamic[
             Part[$CellContext`UL$$, 4]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableUL$$, 4]]]}, {$CellContext`a3, 
           InputField[
            Dynamic[
             Part[$CellContext`LL$$, 5]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableLL$$, 5]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableLL$$, 5]], {False, True}], 
           Slider[
            Dynamic[
             BoxForm`RemapVariable[
              Part[$CellContext`Initial$$, 5], {
               Part[$CellContext`LL$$, 5], 
               Part[$CellContext`UL$$, 5]}], BoxForm`RemapValue[#, 
              Part[$CellContext`Initial$$, 5], {
               Part[$CellContext`LL$$, 5], 
               Part[$CellContext`UL$$, 5]}]& ], {0, 1}, ImageSize -> 100], 
           Panel[
            Dynamic[
             Part[$CellContext`Initial$$, 5]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableUL$$, 5]], {False, True}], 
           InputField[
            Dynamic[
             Part[$CellContext`UL$$, 5]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableUL$$, 5]]]}, {$CellContext`a4, 
           InputField[
            Dynamic[
             Part[$CellContext`LL$$, 6]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableLL$$, 6]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableLL$$, 6]], {False, True}], 
           Slider[
            Dynamic[
             BoxForm`RemapVariable[
              Part[$CellContext`Initial$$, 6], {
               Part[$CellContext`LL$$, 6], 
               Part[$CellContext`UL$$, 6]}], BoxForm`RemapValue[#, 
              Part[$CellContext`Initial$$, 6], {
               Part[$CellContext`LL$$, 6], 
               Part[$CellContext`UL$$, 6]}]& ], {0, 1}, ImageSize -> 100], 
           Panel[
            Dynamic[
             Part[$CellContext`Initial$$, 6]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableUL$$, 6]], {False, True}], 
           InputField[
            Dynamic[
             Part[$CellContext`UL$$, 6]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableUL$$, 6]]]}, {$CellContext`a5, 
           InputField[
            Dynamic[
             Part[$CellContext`LL$$, 7]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableLL$$, 7]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableLL$$, 7]], {False, True}], 
           Slider[
            Dynamic[
             BoxForm`RemapVariable[
              Part[$CellContext`Initial$$, 7], {
               Part[$CellContext`LL$$, 7], 
               Part[$CellContext`UL$$, 7]}], BoxForm`RemapValue[#, 
              Part[$CellContext`Initial$$, 7], {
               Part[$CellContext`LL$$, 7], 
               Part[$CellContext`UL$$, 7]}]& ], {0, 1}, ImageSize -> 100], 
           Panel[
            Dynamic[
             Part[$CellContext`Initial$$, 7]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableUL$$, 7]], {False, True}], 
           InputField[
            Dynamic[
             Part[$CellContext`UL$$, 7]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableUL$$, 7]]]}, {$CellContext`a6, 
           InputField[
            Dynamic[
             Part[$CellContext`LL$$, 8]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableLL$$, 8]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableLL$$, 8]], {False, True}], 
           Slider[
            Dynamic[
             BoxForm`RemapVariable[
              Part[$CellContext`Initial$$, 8], {
               Part[$CellContext`LL$$, 8], 
               Part[$CellContext`UL$$, 8]}], BoxForm`RemapValue[#, 
              Part[$CellContext`Initial$$, 8], {
               Part[$CellContext`LL$$, 8], 
               Part[$CellContext`UL$$, 8]}]& ], {0, 1}, ImageSize -> 100], 
           Panel[
            Dynamic[
             Part[$CellContext`Initial$$, 8]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableUL$$, 8]], {False, True}], 
           InputField[
            Dynamic[
             Part[$CellContext`UL$$, 8]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableUL$$, 8]]]}, {$CellContext`w1, 
           InputField[
            Dynamic[
             Part[$CellContext`LL$$, 9]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableLL$$, 9]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableLL$$, 9]], {False, True}], 
           Slider[
            Dynamic[
             BoxForm`RemapVariable[
              Part[$CellContext`Initial$$, 9], {
               Part[$CellContext`LL$$, 9], 
               Part[$CellContext`UL$$, 9]}], BoxForm`RemapValue[#, 
              Part[$CellContext`Initial$$, 9], {
               Part[$CellContext`LL$$, 9], 
               Part[$CellContext`UL$$, 9]}]& ], {0, 1}, ImageSize -> 100], 
           Panel[
            Dynamic[
             Part[$CellContext`Initial$$, 9]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableUL$$, 9]], {False, True}], 
           InputField[
            Dynamic[
             Part[$CellContext`UL$$, 9]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableUL$$, 9]]]}, {$CellContext`w2, 
           InputField[
            Dynamic[
             Part[$CellContext`LL$$, 10]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableLL$$, 10]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableLL$$, 10]], {False, True}], 
           Slider[
            Dynamic[
             BoxForm`RemapVariable[
              Part[$CellContext`Initial$$, 10], {
               Part[$CellContext`LL$$, 10], 
               Part[$CellContext`UL$$, 10]}], BoxForm`RemapValue[#, 
              Part[$CellContext`Initial$$, 10], {
               Part[$CellContext`LL$$, 10], 
               Part[$CellContext`UL$$, 10]}]& ], {0, 1}, ImageSize -> 100], 
           Panel[
            Dynamic[
             Part[$CellContext`Initial$$, 10]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableUL$$, 10]], {False, True}], 
           InputField[
            Dynamic[
             Part[$CellContext`UL$$, 10]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableUL$$, 10]]]}, {$CellContext`w3, 
           InputField[
            Dynamic[
             Part[$CellContext`LL$$, 11]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableLL$$, 11]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableLL$$, 11]], {False, True}], 
           Slider[
            Dynamic[
             BoxForm`RemapVariable[
              Part[$CellContext`Initial$$, 11], {
               Part[$CellContext`LL$$, 11], 
               Part[$CellContext`UL$$, 11]}], BoxForm`RemapValue[#, 
              Part[$CellContext`Initial$$, 11], {
               Part[$CellContext`LL$$, 11], 
               Part[$CellContext`UL$$, 11]}]& ], {0, 1}, ImageSize -> 100], 
           Panel[
            Dynamic[
             Part[$CellContext`Initial$$, 11]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableUL$$, 11]], {False, True}], 
           InputField[
            Dynamic[
             Part[$CellContext`UL$$, 11]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableUL$$, 11]]]}, {$CellContext`w4, 
           InputField[
            Dynamic[
             Part[$CellContext`LL$$, 12]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableLL$$, 12]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableLL$$, 12]], {False, True}], 
           Slider[
            Dynamic[
             BoxForm`RemapVariable[
              Part[$CellContext`Initial$$, 12], {
               Part[$CellContext`LL$$, 12], 
               Part[$CellContext`UL$$, 12]}], BoxForm`RemapValue[#, 
              Part[$CellContext`Initial$$, 12], {
               Part[$CellContext`LL$$, 12], 
               Part[$CellContext`UL$$, 12]}]& ], {0, 1}, ImageSize -> 100], 
           Panel[
            Dynamic[
             Part[$CellContext`Initial$$, 12]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableUL$$, 12]], {False, True}], 
           InputField[
            Dynamic[
             Part[$CellContext`UL$$, 12]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableUL$$, 12]]]}, {$CellContext`w5, 
           InputField[
            Dynamic[
             Part[$CellContext`LL$$, 13]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableLL$$, 13]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableLL$$, 13]], {False, True}], 
           Slider[
            Dynamic[
             BoxForm`RemapVariable[
              Part[$CellContext`Initial$$, 13], {
               Part[$CellContext`LL$$, 13], 
               Part[$CellContext`UL$$, 13]}], BoxForm`RemapValue[#, 
              Part[$CellContext`Initial$$, 13], {
               Part[$CellContext`LL$$, 13], 
               Part[$CellContext`UL$$, 13]}]& ], {0, 1}, ImageSize -> 100], 
           Panel[
            Dynamic[
             Part[$CellContext`Initial$$, 13]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableUL$$, 13]], {False, True}], 
           InputField[
            Dynamic[
             Part[$CellContext`UL$$, 13]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableUL$$, 13]]]}, {$CellContext`w6, 
           InputField[
            Dynamic[
             Part[$CellContext`LL$$, 14]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableLL$$, 14]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableLL$$, 14]], {False, True}], 
           Slider[
            Dynamic[
             BoxForm`RemapVariable[
              Part[$CellContext`Initial$$, 14], {
               Part[$CellContext`LL$$, 14], 
               Part[$CellContext`UL$$, 14]}], BoxForm`RemapValue[#, 
              Part[$CellContext`Initial$$, 14], {
               Part[$CellContext`LL$$, 14], 
               Part[$CellContext`UL$$, 14]}]& ], {0, 1}, ImageSize -> 100], 
           Panel[
            Dynamic[
             Part[$CellContext`Initial$$, 14]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableUL$$, 14]], {False, True}], 
           InputField[
            Dynamic[
             Part[$CellContext`UL$$, 14]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableUL$$, 14]]]}, {$CellContext`f1, 
           InputField[
            Dynamic[
             Part[$CellContext`LL$$, 15]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableLL$$, 15]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableLL$$, 15]], {False, True}], 
           Slider[
            Dynamic[
             BoxForm`RemapVariable[
              Part[$CellContext`Initial$$, 15], {
               Part[$CellContext`LL$$, 15], 
               Part[$CellContext`UL$$, 15]}], BoxForm`RemapValue[#, 
              Part[$CellContext`Initial$$, 15], {
               Part[$CellContext`LL$$, 15], 
               Part[$CellContext`UL$$, 15]}]& ], {0, 1}, ImageSize -> 100], 
           Panel[
            Dynamic[
             Part[$CellContext`Initial$$, 15]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableUL$$, 15]], {False, True}], 
           InputField[
            Dynamic[
             Part[$CellContext`UL$$, 15]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableUL$$, 15]]]}, {$CellContext`f2, 
           InputField[
            Dynamic[
             Part[$CellContext`LL$$, 16]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableLL$$, 16]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableLL$$, 16]], {False, True}], 
           Slider[
            Dynamic[
             BoxForm`RemapVariable[
              Part[$CellContext`Initial$$, 16], {
               Part[$CellContext`LL$$, 16], 
               Part[$CellContext`UL$$, 16]}], BoxForm`RemapValue[#, 
              Part[$CellContext`Initial$$, 16], {
               Part[$CellContext`LL$$, 16], 
               Part[$CellContext`UL$$, 16]}]& ], {0, 1}, ImageSize -> 100], 
           Panel[
            Dynamic[
             Part[$CellContext`Initial$$, 16]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableUL$$, 16]], {False, True}], 
           InputField[
            Dynamic[
             Part[$CellContext`UL$$, 16]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableUL$$, 16]]]}, {$CellContext`f3, 
           InputField[
            Dynamic[
             Part[$CellContext`LL$$, 17]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableLL$$, 17]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableLL$$, 17]], {False, True}], 
           Slider[
            Dynamic[
             BoxForm`RemapVariable[
              Part[$CellContext`Initial$$, 17], {
               Part[$CellContext`LL$$, 17], 
               Part[$CellContext`UL$$, 17]}], BoxForm`RemapValue[#, 
              Part[$CellContext`Initial$$, 17], {
               Part[$CellContext`LL$$, 17], 
               Part[$CellContext`UL$$, 17]}]& ], {0, 1}, ImageSize -> 100], 
           Panel[
            Dynamic[
             Part[$CellContext`Initial$$, 17]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableUL$$, 17]], {False, True}], 
           InputField[
            Dynamic[
             Part[$CellContext`UL$$, 17]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableUL$$, 17]]]}, {$CellContext`f4, 
           InputField[
            Dynamic[
             Part[$CellContext`LL$$, 18]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableLL$$, 18]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableLL$$, 18]], {False, True}], 
           Slider[
            Dynamic[
             BoxForm`RemapVariable[
              Part[$CellContext`Initial$$, 18], {
               Part[$CellContext`LL$$, 18], 
               Part[$CellContext`UL$$, 18]}], BoxForm`RemapValue[#, 
              Part[$CellContext`Initial$$, 18], {
               Part[$CellContext`LL$$, 18], 
               Part[$CellContext`UL$$, 18]}]& ], {0, 1}, ImageSize -> 100], 
           Panel[
            Dynamic[
             Part[$CellContext`Initial$$, 18]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableUL$$, 18]], {False, True}], 
           InputField[
            Dynamic[
             Part[$CellContext`UL$$, 18]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableUL$$, 18]]]}, {$CellContext`f5, 
           InputField[
            Dynamic[
             Part[$CellContext`LL$$, 19]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableLL$$, 19]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableLL$$, 19]], {False, True}], 
           Slider[
            Dynamic[
             BoxForm`RemapVariable[
              Part[$CellContext`Initial$$, 19], {
               Part[$CellContext`LL$$, 19], 
               Part[$CellContext`UL$$, 19]}], BoxForm`RemapValue[#, 
              Part[$CellContext`Initial$$, 19], {
               Part[$CellContext`LL$$, 19], 
               Part[$CellContext`UL$$, 19]}]& ], {0, 1}, ImageSize -> 100], 
           Panel[
            Dynamic[
             Part[$CellContext`Initial$$, 19]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableUL$$, 19]], {False, True}], 
           InputField[
            Dynamic[
             Part[$CellContext`UL$$, 19]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableUL$$, 19]]]}, {$CellContext`f6, 
           InputField[
            Dynamic[
             Part[$CellContext`LL$$, 20]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableLL$$, 20]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableLL$$, 20]], {False, True}], 
           Slider[
            Dynamic[
             BoxForm`RemapVariable[
              Part[$CellContext`Initial$$, 20], {
               Part[$CellContext`LL$$, 20], 
               Part[$CellContext`UL$$, 20]}], BoxForm`RemapValue[#, 
              Part[$CellContext`Initial$$, 20], {
               Part[$CellContext`LL$$, 20], 
               Part[$CellContext`UL$$, 20]}]& ], {0, 1}, ImageSize -> 100], 
           Panel[
            Dynamic[
             Part[$CellContext`Initial$$, 20]]], 
           Checkbox[
            Dynamic[
             Part[$CellContext`EnableUL$$, 20]], {False, True}], 
           InputField[
            Dynamic[
             Part[$CellContext`UL$$, 20]], FieldSize -> 4, Enabled -> Dynamic[
              Part[$CellContext`EnableUL$$, 20]]]}}]]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    735., {332.5, 339.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`LL$208727$$ = 
    False, $CellContext`EnableLL$208728$$ = 
    False, $CellContext`Initial$208729$$ = 
    False, $CellContext`EnableUL$208730$$ = False, $CellContext`UL$208731$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`EnableLL$$ = {
         True, True, True, True, True, True, True, True, True, True, True, 
          True, True, True, True, True, True, True, True, 
          True}, $CellContext`EnableUL$$ = {
         True, True, True, True, True, True, True, True, True, True, True, 
          True, True, True, True, True, True, True, True, 
          True}, $CellContext`Initial$$ = {
         31.7, 5.57, 16.6, 73.2, 82, 182.5, -31.6, 60.6, 2854.2, 2876.9, 
          2907.3, 2938.7, 2946.6, 2962.8, 7.26, 8.3, 19.2, 15.8, 7.1, 
          4.9}, $CellContext`LL$$ = {
         26.7, 0.5700000000000003, 11.600000000000001`, 68.2, 77, 
          177.5, -36.6, 55.6, 2849.2, 2871.9, 2902.3, 2933.7, 2941.6, 2957.8, 
          2.26, 3.3000000000000007`, 14.2, 10.8, 
          2.0999999999999996`, -0.09999999999999964}, $CellContext`UL$$ = {
         36.7, 10.57, 21.6, 78.2, 87, 187.5, -26.6, 65.6, 2859.2, 2881.9, 
          2912.3, 2943.7, 2951.6, 2967.8, 12.26, 13.3, 24.2, 20.8, 12.1, 
          9.9}}, "ControllerVariables" :> {
        Hold[$CellContext`LL$$, $CellContext`LL$208727$$, False], 
        Hold[$CellContext`EnableLL$$, $CellContext`EnableLL$208728$$, False], 
        Hold[$CellContext`Initial$$, $CellContext`Initial$208729$$, False], 
        Hold[$CellContext`EnableUL$$, $CellContext`EnableUL$208730$$, False], 
        Hold[$CellContext`UL$$, $CellContext`UL$208731$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          Panel[
           Show[
            Plot[
             ReplaceAll[$CellContext`SFG, {$CellContext`n -> 
               Part[$CellContext`Initial$$, 1], $CellContext`p -> 
               Part[$CellContext`Initial$$, 2], $CellContext`a1 -> 
               Part[$CellContext`Initial$$, 3], $CellContext`a2 -> 
               Part[$CellContext`Initial$$, 4], $CellContext`a3 -> 
               Part[$CellContext`Initial$$, 5], $CellContext`a4 -> 
               Part[$CellContext`Initial$$, 6], $CellContext`a5 -> 
               Part[$CellContext`Initial$$, 7], $CellContext`a6 -> 
               Part[$CellContext`Initial$$, 8], $CellContext`w1 -> 
               Part[$CellContext`Initial$$, 9], $CellContext`w2 -> 
               Part[$CellContext`Initial$$, 10], $CellContext`w3 -> 
               Part[$CellContext`Initial$$, 11], $CellContext`w4 -> 
               Part[$CellContext`Initial$$, 12], $CellContext`w5 -> 
               Part[$CellContext`Initial$$, 13], $CellContext`w6 -> 
               Part[$CellContext`Initial$$, 14], $CellContext`f1 -> 
               Part[$CellContext`Initial$$, 15], $CellContext`f2 -> 
               Part[$CellContext`Initial$$, 16], $CellContext`f3 -> 
               Part[$CellContext`Initial$$, 17], $CellContext`f4 -> 
               Part[$CellContext`Initial$$, 18], $CellContext`f5 -> 
               Part[$CellContext`Initial$$, 19], $CellContext`f6 -> 
               Part[$CellContext`Initial$$, 20]}], {$CellContext`w, 
              Part[$CellContext`data, 1, 1], 
              Part[$CellContext`data, -1, 1]}, PlotRange -> All, PlotStyle -> 
             Red, ImageSize -> 650], 
            ListPlot[$CellContext`data]]]}, {
         "constraints" 
          Panel[$CellContext`constraints = 
            Module[{$CellContext`table$}, $CellContext`table$ = Table[
                 Which[
                  And[
                  Part[$CellContext`EnableLL$$, $CellContext`i] == True, 
                   Part[$CellContext`EnableUL$$, $CellContext`i] == True], 
                  Part[$CellContext`LL$$, $CellContext`i] < 
                  Part[$CellContext`variables, $CellContext`i] < 
                  Part[$CellContext`UL$$, $CellContext`i], 
                  And[
                  Part[$CellContext`EnableLL$$, $CellContext`i] == True, 
                   Part[$CellContext`EnableUL$$, $CellContext`i] == False], 
                  Part[$CellContext`LL$$, $CellContext`i] < 
                  Part[$CellContext`variables, $CellContext`i], 
                  And[
                  Part[$CellContext`EnableLL$$, $CellContext`i] == False, 
                   Part[$CellContext`EnableUL$$, $CellContext`i] == True], 
                  Part[$CellContext`variables, $CellContext`i] < 
                  Part[$CellContext`UL$$, $CellContext`i], 
                  And[
                  Part[$CellContext`EnableLL$$, $CellContext`i] == False, 
                   Part[$CellContext`EnableUL$$, $CellContext`i] == 
                   False], $CellContext`false], {$CellContext`i, 1, 
                  Length[$CellContext`variables]}]; 
              Delete[$CellContext`table$, 
                Position[$CellContext`table$, $CellContext`false]]]]}, {
         "initialparameter" 
          Panel[$CellContext`initialparameter = 
            Table[Part[$CellContext`variables, $CellContext`i] -> 
              Part[$CellContext`Initial$$, $CellContext`i], {$CellContext`i, 
               1, 
               Length[$CellContext`variables]}]]}}], 
      "Specifications" :> {{$CellContext`LL$$, {{
          26.7, 0.5700000000000003, 11.600000000000001`, 68.2, 77, 
           177.5, -36.6, 55.6, 2849.2, 2871.9, 2902.3, 2933.7, 2941.6, 2957.8,
            2.26, 3.3000000000000007`, 14.2, 10.8, 
           2.0999999999999996`, -0.09999999999999964}}, ControlType -> 
         None}, {$CellContext`EnableLL$$, {{
          True, True, True, True, True, True, True, True, True, True, True, 
           True, True, True, True, True, True, True, True, True}}, 
         ControlType -> 
         None}, {$CellContext`Initial$$, {{
          31.7, 5.57, 16.6, 73.2, 82, 182.5, -31.6, 60.6, 2854.2, 2876.9, 
           2907.3, 2938.7, 2946.6, 2962.8, 7.26, 8.3, 19.2, 15.8, 7.1, 4.9}}, 
         ControlType -> 
         None}, {$CellContext`EnableUL$$, {{
          True, True, True, True, True, True, True, True, True, True, True, 
           True, True, True, True, True, True, True, True, True}}, 
         ControlType -> 
         None}, {$CellContext`UL$$, {{
          36.7, 10.57, 21.6, 78.2, 87, 187.5, -26.6, 65.6, 2859.2, 2881.9, 
           2912.3, 2943.7, 2951.6, 2967.8, 12.26, 13.3, 24.2, 20.8, 12.1, 
           9.9}}, ControlType -> None}, 
        Panel[
         Grid[{{
           "variable", "LL", "<", "Initial", "", "<", "UL"}, {$CellContext`n, 
            InputField[
             Dynamic[
              Part[$CellContext`LL$$, 1]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableLL$$, 1]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableLL$$, 1]], {False, True}], 
            Slider[
             Dynamic[
              BoxForm`RemapVariable[
               Part[$CellContext`Initial$$, 1], {
                Part[$CellContext`LL$$, 1], 
                Part[$CellContext`UL$$, 1]}], BoxForm`RemapValue[#, 
               Part[$CellContext`Initial$$, 1], {
                Part[$CellContext`LL$$, 1], 
                Part[$CellContext`UL$$, 1]}]& ], {0, 1}, ImageSize -> 100], 
            Panel[
             Dynamic[
              Part[$CellContext`Initial$$, 1]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableUL$$, 1]], {False, True}], 
            InputField[
             Dynamic[
              Part[$CellContext`UL$$, 1]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableUL$$, 1]]]}, {$CellContext`p, 
            InputField[
             Dynamic[
              Part[$CellContext`LL$$, 2]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableLL$$, 2]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableLL$$, 2]], {False, True}], 
            Slider[
             Dynamic[
              BoxForm`RemapVariable[
               Part[$CellContext`Initial$$, 2], {
                Part[$CellContext`LL$$, 2], 
                Part[$CellContext`UL$$, 2]}], BoxForm`RemapValue[#, 
               Part[$CellContext`Initial$$, 2], {
                Part[$CellContext`LL$$, 2], 
                Part[$CellContext`UL$$, 2]}]& ], {0, 1}, ImageSize -> 100], 
            Panel[
             Dynamic[
              Part[$CellContext`Initial$$, 2]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableUL$$, 2]], {False, True}], 
            InputField[
             Dynamic[
              Part[$CellContext`UL$$, 2]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableUL$$, 2]]]}, {$CellContext`a1, 
            InputField[
             Dynamic[
              Part[$CellContext`LL$$, 3]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableLL$$, 3]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableLL$$, 3]], {False, True}], 
            Slider[
             Dynamic[
              BoxForm`RemapVariable[
               Part[$CellContext`Initial$$, 3], {
                Part[$CellContext`LL$$, 3], 
                Part[$CellContext`UL$$, 3]}], BoxForm`RemapValue[#, 
               Part[$CellContext`Initial$$, 3], {
                Part[$CellContext`LL$$, 3], 
                Part[$CellContext`UL$$, 3]}]& ], {0, 1}, ImageSize -> 100], 
            Panel[
             Dynamic[
              Part[$CellContext`Initial$$, 3]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableUL$$, 3]], {False, True}], 
            InputField[
             Dynamic[
              Part[$CellContext`UL$$, 3]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableUL$$, 3]]]}, {$CellContext`a2, 
            InputField[
             Dynamic[
              Part[$CellContext`LL$$, 4]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableLL$$, 4]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableLL$$, 4]], {False, True}], 
            Slider[
             Dynamic[
              BoxForm`RemapVariable[
               Part[$CellContext`Initial$$, 4], {
                Part[$CellContext`LL$$, 4], 
                Part[$CellContext`UL$$, 4]}], BoxForm`RemapValue[#, 
               Part[$CellContext`Initial$$, 4], {
                Part[$CellContext`LL$$, 4], 
                Part[$CellContext`UL$$, 4]}]& ], {0, 1}, ImageSize -> 100], 
            Panel[
             Dynamic[
              Part[$CellContext`Initial$$, 4]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableUL$$, 4]], {False, True}], 
            InputField[
             Dynamic[
              Part[$CellContext`UL$$, 4]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableUL$$, 4]]]}, {$CellContext`a3, 
            InputField[
             Dynamic[
              Part[$CellContext`LL$$, 5]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableLL$$, 5]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableLL$$, 5]], {False, True}], 
            Slider[
             Dynamic[
              BoxForm`RemapVariable[
               Part[$CellContext`Initial$$, 5], {
                Part[$CellContext`LL$$, 5], 
                Part[$CellContext`UL$$, 5]}], BoxForm`RemapValue[#, 
               Part[$CellContext`Initial$$, 5], {
                Part[$CellContext`LL$$, 5], 
                Part[$CellContext`UL$$, 5]}]& ], {0, 1}, ImageSize -> 100], 
            Panel[
             Dynamic[
              Part[$CellContext`Initial$$, 5]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableUL$$, 5]], {False, True}], 
            InputField[
             Dynamic[
              Part[$CellContext`UL$$, 5]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableUL$$, 5]]]}, {$CellContext`a4, 
            InputField[
             Dynamic[
              Part[$CellContext`LL$$, 6]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableLL$$, 6]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableLL$$, 6]], {False, True}], 
            Slider[
             Dynamic[
              BoxForm`RemapVariable[
               Part[$CellContext`Initial$$, 6], {
                Part[$CellContext`LL$$, 6], 
                Part[$CellContext`UL$$, 6]}], BoxForm`RemapValue[#, 
               Part[$CellContext`Initial$$, 6], {
                Part[$CellContext`LL$$, 6], 
                Part[$CellContext`UL$$, 6]}]& ], {0, 1}, ImageSize -> 100], 
            Panel[
             Dynamic[
              Part[$CellContext`Initial$$, 6]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableUL$$, 6]], {False, True}], 
            InputField[
             Dynamic[
              Part[$CellContext`UL$$, 6]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableUL$$, 6]]]}, {$CellContext`a5, 
            InputField[
             Dynamic[
              Part[$CellContext`LL$$, 7]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableLL$$, 7]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableLL$$, 7]], {False, True}], 
            Slider[
             Dynamic[
              BoxForm`RemapVariable[
               Part[$CellContext`Initial$$, 7], {
                Part[$CellContext`LL$$, 7], 
                Part[$CellContext`UL$$, 7]}], BoxForm`RemapValue[#, 
               Part[$CellContext`Initial$$, 7], {
                Part[$CellContext`LL$$, 7], 
                Part[$CellContext`UL$$, 7]}]& ], {0, 1}, ImageSize -> 100], 
            Panel[
             Dynamic[
              Part[$CellContext`Initial$$, 7]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableUL$$, 7]], {False, True}], 
            InputField[
             Dynamic[
              Part[$CellContext`UL$$, 7]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableUL$$, 7]]]}, {$CellContext`a6, 
            InputField[
             Dynamic[
              Part[$CellContext`LL$$, 8]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableLL$$, 8]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableLL$$, 8]], {False, True}], 
            Slider[
             Dynamic[
              BoxForm`RemapVariable[
               Part[$CellContext`Initial$$, 8], {
                Part[$CellContext`LL$$, 8], 
                Part[$CellContext`UL$$, 8]}], BoxForm`RemapValue[#, 
               Part[$CellContext`Initial$$, 8], {
                Part[$CellContext`LL$$, 8], 
                Part[$CellContext`UL$$, 8]}]& ], {0, 1}, ImageSize -> 100], 
            Panel[
             Dynamic[
              Part[$CellContext`Initial$$, 8]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableUL$$, 8]], {False, True}], 
            InputField[
             Dynamic[
              Part[$CellContext`UL$$, 8]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableUL$$, 8]]]}, {$CellContext`w1, 
            InputField[
             Dynamic[
              Part[$CellContext`LL$$, 9]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableLL$$, 9]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableLL$$, 9]], {False, True}], 
            Slider[
             Dynamic[
              BoxForm`RemapVariable[
               Part[$CellContext`Initial$$, 9], {
                Part[$CellContext`LL$$, 9], 
                Part[$CellContext`UL$$, 9]}], BoxForm`RemapValue[#, 
               Part[$CellContext`Initial$$, 9], {
                Part[$CellContext`LL$$, 9], 
                Part[$CellContext`UL$$, 9]}]& ], {0, 1}, ImageSize -> 100], 
            Panel[
             Dynamic[
              Part[$CellContext`Initial$$, 9]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableUL$$, 9]], {False, True}], 
            InputField[
             Dynamic[
              Part[$CellContext`UL$$, 9]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableUL$$, 9]]]}, {$CellContext`w2, 
            InputField[
             Dynamic[
              Part[$CellContext`LL$$, 10]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableLL$$, 10]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableLL$$, 10]], {False, True}], 
            Slider[
             Dynamic[
              BoxForm`RemapVariable[
               Part[$CellContext`Initial$$, 10], {
                Part[$CellContext`LL$$, 10], 
                Part[$CellContext`UL$$, 10]}], BoxForm`RemapValue[#, 
               Part[$CellContext`Initial$$, 10], {
                Part[$CellContext`LL$$, 10], 
                Part[$CellContext`UL$$, 10]}]& ], {0, 1}, ImageSize -> 100], 
            Panel[
             Dynamic[
              Part[$CellContext`Initial$$, 10]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableUL$$, 10]], {False, True}], 
            InputField[
             Dynamic[
              Part[$CellContext`UL$$, 10]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableUL$$, 10]]]}, {$CellContext`w3, 
            InputField[
             Dynamic[
              Part[$CellContext`LL$$, 11]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableLL$$, 11]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableLL$$, 11]], {False, True}], 
            Slider[
             Dynamic[
              BoxForm`RemapVariable[
               Part[$CellContext`Initial$$, 11], {
                Part[$CellContext`LL$$, 11], 
                Part[$CellContext`UL$$, 11]}], BoxForm`RemapValue[#, 
               Part[$CellContext`Initial$$, 11], {
                Part[$CellContext`LL$$, 11], 
                Part[$CellContext`UL$$, 11]}]& ], {0, 1}, ImageSize -> 100], 
            Panel[
             Dynamic[
              Part[$CellContext`Initial$$, 11]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableUL$$, 11]], {False, True}], 
            InputField[
             Dynamic[
              Part[$CellContext`UL$$, 11]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableUL$$, 11]]]}, {$CellContext`w4, 
            InputField[
             Dynamic[
              Part[$CellContext`LL$$, 12]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableLL$$, 12]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableLL$$, 12]], {False, True}], 
            Slider[
             Dynamic[
              BoxForm`RemapVariable[
               Part[$CellContext`Initial$$, 12], {
                Part[$CellContext`LL$$, 12], 
                Part[$CellContext`UL$$, 12]}], BoxForm`RemapValue[#, 
               Part[$CellContext`Initial$$, 12], {
                Part[$CellContext`LL$$, 12], 
                Part[$CellContext`UL$$, 12]}]& ], {0, 1}, ImageSize -> 100], 
            Panel[
             Dynamic[
              Part[$CellContext`Initial$$, 12]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableUL$$, 12]], {False, True}], 
            InputField[
             Dynamic[
              Part[$CellContext`UL$$, 12]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableUL$$, 12]]]}, {$CellContext`w5, 
            InputField[
             Dynamic[
              Part[$CellContext`LL$$, 13]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableLL$$, 13]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableLL$$, 13]], {False, True}], 
            Slider[
             Dynamic[
              BoxForm`RemapVariable[
               Part[$CellContext`Initial$$, 13], {
                Part[$CellContext`LL$$, 13], 
                Part[$CellContext`UL$$, 13]}], BoxForm`RemapValue[#, 
               Part[$CellContext`Initial$$, 13], {
                Part[$CellContext`LL$$, 13], 
                Part[$CellContext`UL$$, 13]}]& ], {0, 1}, ImageSize -> 100], 
            Panel[
             Dynamic[
              Part[$CellContext`Initial$$, 13]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableUL$$, 13]], {False, True}], 
            InputField[
             Dynamic[
              Part[$CellContext`UL$$, 13]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableUL$$, 13]]]}, {$CellContext`w6, 
            InputField[
             Dynamic[
              Part[$CellContext`LL$$, 14]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableLL$$, 14]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableLL$$, 14]], {False, True}], 
            Slider[
             Dynamic[
              BoxForm`RemapVariable[
               Part[$CellContext`Initial$$, 14], {
                Part[$CellContext`LL$$, 14], 
                Part[$CellContext`UL$$, 14]}], BoxForm`RemapValue[#, 
               Part[$CellContext`Initial$$, 14], {
                Part[$CellContext`LL$$, 14], 
                Part[$CellContext`UL$$, 14]}]& ], {0, 1}, ImageSize -> 100], 
            Panel[
             Dynamic[
              Part[$CellContext`Initial$$, 14]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableUL$$, 14]], {False, True}], 
            InputField[
             Dynamic[
              Part[$CellContext`UL$$, 14]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableUL$$, 14]]]}, {$CellContext`f1, 
            InputField[
             Dynamic[
              Part[$CellContext`LL$$, 15]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableLL$$, 15]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableLL$$, 15]], {False, True}], 
            Slider[
             Dynamic[
              BoxForm`RemapVariable[
               Part[$CellContext`Initial$$, 15], {
                Part[$CellContext`LL$$, 15], 
                Part[$CellContext`UL$$, 15]}], BoxForm`RemapValue[#, 
               Part[$CellContext`Initial$$, 15], {
                Part[$CellContext`LL$$, 15], 
                Part[$CellContext`UL$$, 15]}]& ], {0, 1}, ImageSize -> 100], 
            Panel[
             Dynamic[
              Part[$CellContext`Initial$$, 15]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableUL$$, 15]], {False, True}], 
            InputField[
             Dynamic[
              Part[$CellContext`UL$$, 15]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableUL$$, 15]]]}, {$CellContext`f2, 
            InputField[
             Dynamic[
              Part[$CellContext`LL$$, 16]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableLL$$, 16]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableLL$$, 16]], {False, True}], 
            Slider[
             Dynamic[
              BoxForm`RemapVariable[
               Part[$CellContext`Initial$$, 16], {
                Part[$CellContext`LL$$, 16], 
                Part[$CellContext`UL$$, 16]}], BoxForm`RemapValue[#, 
               Part[$CellContext`Initial$$, 16], {
                Part[$CellContext`LL$$, 16], 
                Part[$CellContext`UL$$, 16]}]& ], {0, 1}, ImageSize -> 100], 
            Panel[
             Dynamic[
              Part[$CellContext`Initial$$, 16]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableUL$$, 16]], {False, True}], 
            InputField[
             Dynamic[
              Part[$CellContext`UL$$, 16]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableUL$$, 16]]]}, {$CellContext`f3, 
            InputField[
             Dynamic[
              Part[$CellContext`LL$$, 17]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableLL$$, 17]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableLL$$, 17]], {False, True}], 
            Slider[
             Dynamic[
              BoxForm`RemapVariable[
               Part[$CellContext`Initial$$, 17], {
                Part[$CellContext`LL$$, 17], 
                Part[$CellContext`UL$$, 17]}], BoxForm`RemapValue[#, 
               Part[$CellContext`Initial$$, 17], {
                Part[$CellContext`LL$$, 17], 
                Part[$CellContext`UL$$, 17]}]& ], {0, 1}, ImageSize -> 100], 
            Panel[
             Dynamic[
              Part[$CellContext`Initial$$, 17]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableUL$$, 17]], {False, True}], 
            InputField[
             Dynamic[
              Part[$CellContext`UL$$, 17]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableUL$$, 17]]]}, {$CellContext`f4, 
            InputField[
             Dynamic[
              Part[$CellContext`LL$$, 18]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableLL$$, 18]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableLL$$, 18]], {False, True}], 
            Slider[
             Dynamic[
              BoxForm`RemapVariable[
               Part[$CellContext`Initial$$, 18], {
                Part[$CellContext`LL$$, 18], 
                Part[$CellContext`UL$$, 18]}], BoxForm`RemapValue[#, 
               Part[$CellContext`Initial$$, 18], {
                Part[$CellContext`LL$$, 18], 
                Part[$CellContext`UL$$, 18]}]& ], {0, 1}, ImageSize -> 100], 
            Panel[
             Dynamic[
              Part[$CellContext`Initial$$, 18]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableUL$$, 18]], {False, True}], 
            InputField[
             Dynamic[
              Part[$CellContext`UL$$, 18]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableUL$$, 18]]]}, {$CellContext`f5, 
            InputField[
             Dynamic[
              Part[$CellContext`LL$$, 19]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableLL$$, 19]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableLL$$, 19]], {False, True}], 
            Slider[
             Dynamic[
              BoxForm`RemapVariable[
               Part[$CellContext`Initial$$, 19], {
                Part[$CellContext`LL$$, 19], 
                Part[$CellContext`UL$$, 19]}], BoxForm`RemapValue[#, 
               Part[$CellContext`Initial$$, 19], {
                Part[$CellContext`LL$$, 19], 
                Part[$CellContext`UL$$, 19]}]& ], {0, 1}, ImageSize -> 100], 
            Panel[
             Dynamic[
              Part[$CellContext`Initial$$, 19]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableUL$$, 19]], {False, True}], 
            InputField[
             Dynamic[
              Part[$CellContext`UL$$, 19]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableUL$$, 19]]]}, {$CellContext`f6, 
            InputField[
             Dynamic[
              Part[$CellContext`LL$$, 20]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableLL$$, 20]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableLL$$, 20]], {False, True}], 
            Slider[
             Dynamic[
              BoxForm`RemapVariable[
               Part[$CellContext`Initial$$, 20], {
                Part[$CellContext`LL$$, 20], 
                Part[$CellContext`UL$$, 20]}], BoxForm`RemapValue[#, 
               Part[$CellContext`Initial$$, 20], {
                Part[$CellContext`LL$$, 20], 
                Part[$CellContext`UL$$, 20]}]& ], {0, 1}, ImageSize -> 100], 
            Panel[
             Dynamic[
              Part[$CellContext`Initial$$, 20]]], 
            Checkbox[
             Dynamic[
              Part[$CellContext`EnableUL$$, 20]], {False, True}], 
            InputField[
             Dynamic[
              Part[$CellContext`UL$$, 20]], FieldSize -> 4, Enabled -> Dynamic[
               Part[$CellContext`EnableUL$$, 20]]]}}]]}, 
      "Options" :> {ControlPlacement -> Left}, "DefaultOptions" :> {}],
     ImageSizeCache->{1228., {510., 517.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6471207965849113`*^9, {3.6471208385093093`*^9, 3.6471208518700733`*^9}, 
   3.6471209214590535`*^9, 3.647121035581581*^9, 3.6471210839513474`*^9, {
   3.6471212617365165`*^9, 3.647121297669572*^9}, 3.647121563655785*^9, 
   3.6471218859332185`*^9, 3.6471222207113667`*^9, {3.6471222901773396`*^9, 
   3.64712236448059*^9}, 3.876760772413367*^9, 3.8767614905218253`*^9, 
   3.8767620901216097`*^9, 3.8767622676527767`*^9, {3.876762299151349*^9, 
   3.876762304605456*^9}, 3.8767624709311304`*^9, 3.876762676751419*^9, 
   3.8767628117017145`*^9, 3.8767636552196493`*^9, 3.8767640300167437`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SFG fitting", "Section",
 CellChangeTimes->{{3.538348303640625*^9, 3.538348308953125*^9}, {
  3.6471203136342883`*^9, 3.6471203172094927`*^9}, {3.647121111779939*^9, 
  3.6471211238756313`*^9}}],

Cell[CellGroupData[{

Cell["Fit", "Subsection",
 CellChangeTimes->{{3.538348253265625*^9, 3.538348253609375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Set", " ", "intermidiate", " ", "output", " ", "parameter", " ", "as", 
    " ", "a", " ", "initial", " ", "parameter", " ", "for", " ", "next", " ", 
    "loop"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"changep", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"variables", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"ToExpression", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringJoin", "[", 
             RowBox[{"\"\<p\>\"", ",", 
              RowBox[{"ToString", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
           "variables"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "variables", "]"}]}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"initial", "=", 
     RowBox[{"initialparameter", "/.", "changep"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Construct", " ", "initial", " ", "parameter", " ", "table"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"parameter", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"variables", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"StringJoin", "[", 
              RowBox[{"\"\<p\>\"", ",", 
               RowBox[{"ToString", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
            "variables"}], "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "variables", "]"}]}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Plot", " ", "with", " ", "initial", " ", "parameters"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"SFG", "/.", "initialparameter"}], ",", 
       RowBox[{"{", 
        RowBox[{"w", ",", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", " ", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
     RowBox[{"ListPlot", "[", "data", "]"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Plot", " ", "the", " ", "fitting", " ", "result", " ", "of", " ", "each",
      " ", "loop"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"plotresult", "[", "i_", "]"}], ":=", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"SFG", "/.", 
          RowBox[{"bestfitparameters", "[", "i", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"w", ",", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", " ", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
       RowBox[{"ListPlot", "[", "data", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TEST", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", "TEST", "]"}], ">", 
        SuperscriptBox["10", 
         RowBox[{"-", "10"}]]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"fit", "=", 
           RowBox[{"NonlinearModelFit", "[", 
            RowBox[{"data", ",", 
             RowBox[{"{", 
              RowBox[{"SFG", ",", "constraints"}], "}"}], ",", 
             RowBox[{"parameter", "/.", "initial"}], ",", "w", ",", 
             RowBox[{"Weights", "\[Rule]", 
              RowBox[{"1", "/", 
               RowBox[{"SD", "^", "2"}]}]}], ",", 
             RowBox[{"MaxIterations", "\[Rule]", "100"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"initial", "=", 
           RowBox[{
            RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}], "/.", 
            "changep"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"bestfitparameters", "[", "i", "]"}], "=", 
           RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", "]"}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", "]"}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"plotresult", "[", "i", "]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{
            RowBox[{"parametertable", "[", "i", "]"}], "=", 
            RowBox[{"fit", "[", "\"\<ParameterTable\>\"", "]"}]}], "]"}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{
            RowBox[{"R", "^", "2"}], ",", 
            RowBox[{
             RowBox[{"R", "[", "i", "]"}], "=", 
             RowBox[{"fit", "[", "\"\<RSquared\>\"", "]"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"TEST", "=", 
            RowBox[{
             RowBox[{"R", "[", "1", "]"}], "-", 
             RowBox[{"R", "[", "2", "]"}]}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2"}], "}"}]}], "]"}]}], "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", "constraints"}]}]], "Input",
 CellChangeTimes->{{3.647121133357174*^9, 3.6471211524452653`*^9}, {
  3.876762664269639*^9, 3.8767626719023724`*^9}, {3.876763139006564*^9, 
  3.8767632177199755`*^9}},
 Background->RGBColor[1, 0.925, 0.925]],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
       "]]}}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwt0w1IU1EUB/A1xUZImJVlWFpEi0xalEiG+ZfMirJMI0zCYtQKkRSyRWql
zo/UFGPah0uj9N4rYRYmQ3SYhIwyK8tRVESKRVBphYJSKN23ew6Mx4+z+975
eG+lOSv5hF6n08XIn3b1Rj7DM2vP7WXDNnhdyvD8zg7nxMli5RqG0JIfBzrt
5HqGwrrtlZmmEuVmhvqbMhrJbQxXx/JjI7vJnQwHR5mjz6dU+QlDUtX104GP
KD9Az4+k/FuGrt3++nAP5YcZ/LQHzqX8dwZXjn2p7yzlJxm4oy/s4RR5lmEo
0RyQGk3/N3C8a8qOmbecHMhx5pSsMJgcwrGl46m1J5S8hqPFvSeq/CjZxDGd
IhsYo/tHcyxq2zmSG07ziOe4EBuZ3mUrUt7H8WJAxutC5VSOe3/eJJqTKG/m
eP9yKmXUUqCcyXF86+f9Vd15ylaOgFRZUdF55QKOcTnO9Dg6X0H5MaqvlsP3
0PyIdge5kWOTFlaqt4UjvjLz2788qred41KGnGAU2UXzmEN2c3SukAvXkQc5
fgttIPR+fOBqX+vJXzgSnBMzHh/yOMdGQ2tIWjOdn+ZYojVsqFDWC5yTxzdc
rlb2F+r+Q1eUgwQsWhjLlMMEsgJtvf1N1M86gfaGX8J9tkZ5s8DfixmuyQXX
lLcJ1f8IeZdAhDxgfFynnCzgXbeNfESo/SWQLQKfVvsVLp6pVc4WOPZ1cNXH
DnKuwN6o8rhhJ7lY9fNgIblawCgHcMtIviGQJhf8ai35roA+vCzocBy5VXi/
p5/VdmWn8L7PJkHuFdDW2zBB7hcIlgu/7yB7qL8cO/4DJao68g==
       "]]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2750., 400.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6471215710992107`*^9, 3.647121933910962*^9, 3.647122410875243*^9, 
   3.8767615323178253`*^9, 3.8767624926130514`*^9, 3.8767625783103437`*^9, 
   3.876762695086956*^9, {3.876763207411254*^9, 3.8767632191002703`*^9}, 
   3.8767636665177174`*^9, 3.8767640351980505`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{
  3.6471215700141487`*^9, 3.6471219319418497`*^9, 3.647122408137087*^9, 
   3.876761530534089*^9, 3.876762490853754*^9, 3.8767625764832296`*^9, 
   3.8767626929982047`*^9, {3.8767632076446276`*^9, 3.8767632193705482`*^9}, 
   3.8767636669804473`*^9, 3.876764035715669*^9}],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{
  3.6471215700141487`*^9, 3.6471219319418497`*^9, 3.647122408137087*^9, 
   3.876761530534089*^9, 3.876762490853754*^9, 3.8767625764832296`*^9, 
   3.8767626929982047`*^9, {3.8767632076446276`*^9, 3.8767632193705482`*^9}, 
   3.8767636669804473`*^9, 3.876764035717661*^9}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
u2TYSMY5BSqSTRqL0Y3x976VO6YAwTnt2eZwPG/1zUo99ikg8nt3Wxv68pJW
H691CtiI2PUcjMT7EhIQ+vJwCjT6PRhWJGK8hPrvz+9LgUzxE5u2xWJ/13t3
5yhrCubpmx8v07E+vnVR212dDCHxCgfKc+mgPnixamtwMqQXRmY5leB7ovaw
bcEgGepez+cz19AhNZK70JorGUwzTba9aaVDcu2u0btjVNirvrF9Yxsdrt3e
3/HjGxU4+5rCtdCc4s83qKF7tmvM5KNfmp8n9oxQwSZDpvtqOx3+Xk9L2jRE
Bed0lnjhTozXN8sHpE9U8Eqt33T+Jd6HFQWdxh4qmB8IariDvse+M5MfrdSr
cvUNesS5R//SKyr84ike0+qmg+EZOlmomwoBKbeec77Cfsa0rSm4iwrhyYFR
FT143oFHe01aqXBa+YDWBHpzPxMX7TkV9N/M/BJ+jeepvnqDEc3C7eFCQWu6
DSU+baZCNNVWz+ENzhOr4Rv2NlHh/D6uP9fRfv5n78Y2UsHk9YuHzW/+3+9w
5HgDFTi4DMT2vqXDLFurTEE9FX4+XP9wBs2p/3yCGd1tUZOYjlbLoyy41FGh
dDbgcBfaV67f5FktFZKSlNfX0VuZyRPi6P8AjnkVPA==
       "]]}}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwt0w1IU1EUB/A1xUZImJVlWFpEi0xalEiG+ZfMirJMI0zCYtQKkRSyRWql
zo/UFGPah0uj9N4rYRYmQ3SYhIwyK8tRVESKRVBphYJSKN23ew6Mx4+z+975
eG+lOSv5hF6n08XIn3b1Rj7DM2vP7WXDNnhdyvD8zg7nxMli5RqG0JIfBzrt
5HqGwrrtlZmmEuVmhvqbMhrJbQxXx/JjI7vJnQwHR5mjz6dU+QlDUtX104GP
KD9Az4+k/FuGrt3++nAP5YcZ/LQHzqX8dwZXjn2p7yzlJxm4oy/s4RR5lmEo
0RyQGk3/N3C8a8qOmbecHMhx5pSsMJgcwrGl46m1J5S8hqPFvSeq/CjZxDGd
IhsYo/tHcyxq2zmSG07ziOe4EBuZ3mUrUt7H8WJAxutC5VSOe3/eJJqTKG/m
eP9yKmXUUqCcyXF86+f9Vd15ylaOgFRZUdF55QKOcTnO9Dg6X0H5MaqvlsP3
0PyIdge5kWOTFlaqt4UjvjLz2788qred41KGnGAU2UXzmEN2c3SukAvXkQc5
fgttIPR+fOBqX+vJXzgSnBMzHh/yOMdGQ2tIWjOdn+ZYojVsqFDWC5yTxzdc
rlb2F+r+Q1eUgwQsWhjLlMMEsgJtvf1N1M86gfaGX8J9tkZ5s8DfixmuyQXX
lLcJ1f8IeZdAhDxgfFynnCzgXbeNfESo/SWQLQKfVvsVLp6pVc4WOPZ1cNXH
DnKuwN6o8rhhJ7lY9fNgIblawCgHcMtIviGQJhf8ai35roA+vCzocBy5VXi/
p5/VdmWn8L7PJkHuFdDW2zBB7hcIlgu/7yB7qL8cO/4DJao68g==
       "]]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2750., 450.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.6471215700141487`*^9, 3.6471219319418497`*^9, 3.647122408137087*^9, 
   3.876761530534089*^9, 3.876762490853754*^9, 3.8767625764832296`*^9, 
   3.8767626929982047`*^9, {3.8767632076446276`*^9, 3.8767632193705482`*^9}, 
   3.8767636669804473`*^9, 3.8767640359959188`*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"n", "30.888387445248753`", "0.6469069023848177`", 
      "47.747809354605636`", "1.455059083609783`*^-37"},
     {"p", "5.775593624529346`", "0.23300053292638265`", 
      "24.787898774266605`", "2.6878205813251854`*^-26"},
     {"a1", "21.6`", "68.89553459647009`", "0.31351814201767864`", 
      "0.7554765543721742`"},
     {"a2", "78.2`", "87.3509178059295`", "0.8952395918007364`", 
      "0.3758849421998348`"},
     {"a3", "87.`", "279.5918255064291`", "0.311167895708022`", 
      "0.7572496414802274`"},
     {"a4", "187.5`", "261.25061361289494`", "0.7177016635751369`", 
      "0.4770108755076624`"},
     {"a5", 
      RowBox[{"-", "26.6`"}], "171.1110266969189`", 
      RowBox[{"-", "0.15545462214492675`"}], "0.8772257670682018`"},
     {"a6", "65.6`", "49.09331464587163`", "1.3362308182528972`", 
      "0.18884304672891383`"},
     {"w1", "2849.2`", "18.565857647543975`", "153.4644967170107`", 
      "3.262264166479471`*^-58"},
     {"w2", "2878.1612485331943`", "4.556302224631302`", "631.68795804938`", 
      "2.1551095143983442`*^-83"},
     {"w3", "2912.3`", "17.169151115629983`", "169.62399482574185`", 
      "5.41511564782793`*^-60"},
     {"w4", "2943.7`", "25.25034527264477`", "116.58058407577852`", 
      "2.4951710422237365`*^-53"},
     {"w5", "2949.664961214539`", "1.366424236321034`", "2158.674358086789`", 
      "2.8393593875590685`*^-105"},
     {"w6", "2965.3396385218734`", "1.3373835465698543`", 
      "2217.2694184308093`", "9.469774791283689`*^-106"},
     {"f1", "12.26`", "34.75604782733599`", "0.3527443644026`", 
      "0.7260871375803777`"},
     {"f2", "10.626419111022098`", "10.200306133401142`", 
      "1.0417745283375015`", "0.3036205018634839`"},
     {"f3", "20.837693028853142`", "37.249169243971174`", 
      "0.5594136312778506`", "0.5789228137392715`"},
     {"f4", "18.405951104248885`", "19.0210176977821`", "0.9676638441062524`",
       "0.33888603527914063`"},
     {"f5", "3.777457232317589`", "20.807340832310786`", 
      "0.18154444927685065`", "0.8568348052213149`"},
     {"f6", "6.358882326064233`", "2.119631754275276`", "2.999993896693815`", 
      "0.004576854365969878`"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Print",
 CellChangeTimes->{
  3.6471215700141487`*^9, 3.6471219319418497`*^9, 3.647122408137087*^9, 
   3.876761530534089*^9, 3.876762490853754*^9, 3.8767625764832296`*^9, 
   3.8767626929982047`*^9, {3.8767632076446276`*^9, 3.8767632193705482`*^9}, 
   3.8767636669804473`*^9, 3.8767640360607443`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   SuperscriptBox["R", "2"], "\[InvisibleSpace]", "0.9960284533124205`"}],
  SequenceForm[$CellContext`R^2, 0.9960284533124205],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6471215700141487`*^9, 3.6471219319418497`*^9, 3.647122408137087*^9, 
   3.876761530534089*^9, 3.876762490853754*^9, 3.8767625764832296`*^9, 
   3.8767626929982047`*^9, {3.8767632076446276`*^9, 3.8767632193705482`*^9}, 
   3.8767636669804473`*^9, 3.8767640360647335`*^9}],

Cell[BoxData[
 RowBox[{"0.9960284533124205`", "\[VeryThinSpace]", "-", 
  RowBox[{"R", "[", "2", "]"}]}]], "Print",
 CellChangeTimes->{
  3.6471215700141487`*^9, 3.6471219319418497`*^9, 3.647122408137087*^9, 
   3.876761530534089*^9, 3.876762490853754*^9, 3.8767625764832296`*^9, 
   3.8767626929982047`*^9, {3.8767632076446276`*^9, 3.8767632193705482`*^9}, 
   3.8767636669804473`*^9, 3.8767640360687227`*^9}],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{
  3.6471215700141487`*^9, 3.6471219319418497`*^9, 3.647122408137087*^9, 
   3.876761530534089*^9, 3.876762490853754*^9, 3.8767625764832296`*^9, 
   3.8767626929982047`*^9, {3.8767632076446276`*^9, 3.8767632193705482`*^9}, 
   3.8767636669804473`*^9, 3.8767640373163877`*^9}],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{
  3.6471215700141487`*^9, 3.6471219319418497`*^9, 3.647122408137087*^9, 
   3.876761530534089*^9, 3.876762490853754*^9, 3.8767625764832296`*^9, 
   3.8767626929982047`*^9, {3.8767632076446276`*^9, 3.8767632193705482`*^9}, 
   3.8767636669804473`*^9, 3.8767640373193808`*^9}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwV2nc81W0UAHAhCdmprKwiOxRCHVuUTRKypSEpssd1h71HaaByr5SVmZVS
Rglp6q1kFjIqe76nv3y+n1/3/p5xnnPOI6KuFy096Ono6MoZ6Oj+/fS9+JqO
LrQAVv7819FxPRZCk+4KKqBTnnvT70NTioPUnNBdRueYY67Fwu2JPb4NaDEH
91D97Fjo9ArvDwwrgG3nvTY1ZcSClLNC0+/wAugd1/AuSI6FfvPUkKGoApAy
ebB4jBQLpko2862UAljtLBBYuhgL6vRrpPiMArAck0lPPRwLCRcpIVfzCuAL
s/bMVrZYeDvLnC75sACGhCTyat7HgCSlSO99bQGQWM8xkjJiYKha3qHoeQF4
a3OoVpjHwIO/vdvC3hTA4LfUi0zrFDhj5DPA860AdmwLvOmfT4GEQ7/4e8cK
wPORwTu3wxRoVI+bSpwvAN1Fy49qT8mgqOkb0og+0hA5rfGEDHcO2zJPor/v
6azRaiQDWVdM7NhCAfSFsFlpPSaD+fE6G5bFArCaXoyXLSfDsPN4A3mpAMr4
RZ505JGBJcY4PmK1AJQvt4XMhpPB9gOL1CV6KhTLMrSVHCSDVFXgi1x0ieo+
S0cVMiynj7p2oVNMJJVZlMiQa/HslgwDFS4wa087yZHhZ2cQzyjaYDReYFac
DEEtP9ftN1Nhkvg45xUnGW6Wtb7XY6bCwNOMENExEgzFEaJ3slOB/42Z4lw6
CcbH7HaYoBnfCAT8SiHBjJHCgzD0qQ1t6YFEEqwyfekdRDtrnul9RiEBX/QB
sWIOKlgWvXnrGUIC45CfzdpcOL4rT2QVXElQds50/SwvFRpHVvVK5EgQdow/
qJGfCoK56uKD9URYPhBT9AtNPy0441JLhIDd8/8JCFDhT/XHbf2VRPD58+Zw
MNpuLFbjTTERnK7FMqoKUsF9gdEtM5cIh4cXk8uEqJC08MH8FoEI6yEfqXdF
qKDKPxhfZUCEiAcZ72L3UqHGpOfKeFs0KG4/t9qAtrP6+zKsJRq+h2tLzKCH
vx1I4ngSDWA5ddlWkgrHJ9IL5aujgW7JkEdcigrpUpFejveigWCwYtGwjwpO
3Pr8qZHRQB5w6Z6SpcKdbWTOXerRcNBEbUFUjgpx8VzxD1WiYbSSfbcNWofd
XVtHMRoMY+p96tH2m514/SWjgVlhO3uMPBWucN49v7Y9GuJC24+JKlIhm73k
0fO/BEjaofDSSpkKZS4dj2orCHDbMZGejGbRtjFgKyNAyd2JQ7Xojk8cP848
JECXQuEDQRUqqKc3mxwuIAC7kWjiCLpMWi7aOZsAwkkRL3YcoEKWzNpphgwC
yL/7unYU3baL8Uh5CgFMnXN8StCH7UcW5eMIkBzIY371IBXKywynasMIkNd0
KeY+uqwj/lJdMAHKGHua/0MrZax2tV8lQE9Kwn5QpUKRr/4fNj8CcN7fzLNV
DeczVhWt5kUAkWk3Ew30Ta/ZGKo7ARQPPIu+gM4p7pgTcyWA+dPw2TdoC6+4
B4aOBEjpW3ifo06F21sPp+pZ4/t327K/Rt+yVR7fZ4nv96g02ECfyf9SK2yO
7//tW+N2CNf/ZCGb6jECfFftns5Ezz7dVGVvTICZMDmpdvSyjvGuJCMcH8v4
NVkNKjBnC6lL6OP4zI3eOKF9nsyvkXVxfFnUralolUn51CVtHJ+YW/Ac+lrF
JXb2IwRwPvP0kaQmns+AXSOlWgTwLdk9cRJ9Ofegm4smjv/Ql1NNaLviSca/
6jj+yEMZM2jJSNX5XjUcf+u1TjEtKmxf0pJ+pkqAZrYFRhv0O+nWsOaDOB9L
Gy0K+rNiWMfrAzifaxX+j9HfX/weGFPB+XzjKplANz9MzuZFc57rEjY/TAU6
PfUtmUo4n3LZEwS08wen4+P7cT4LccmV6K63I0bH0aA11jaKvnYutqpREecX
bUi36wjGE9+0sQbauaNAzQTN96O04YUCzo+D8VIY+tVPtzoHdKSN6/1StNu1
0ukNeQKk3mgeGEAfPmvFWIrmO19dwwkYX4xzUxfQNzUfJh5BJ/53LvkgWmzb
HTcf9MBmq0xmdOHXbPVb6Knl5OIhOYzPkkSOTnS0gzuhDV0RHj2y/M90UfUV
aDWzoPp92ni+FPnXaeim3RdT7dBNPGu/7qL1Zty9KGg4TJX69/xls71WNdrA
/KRZOdo81ZxnBC15R33tKfq9i8EYjw4V3o+5dX5C2ytpPtFB73/NbDOH/k6v
lHkJ3WMRI7cDx+v5VvJcHlqeP2lcC/3rrpB2N7r6tPxub7TfFZ4d62iHawyO
19ALelsnZXXx+6qPqbxC04/OXotD68zvGVfH9dwl1Tmjr0cF/bDBj/K4/rcX
n7ZeQTdKvTfzQUt01Ny8i5b35XhajFY8e9dokz7Gw8rNKmncz+pD14UV0a6s
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
3Hm68S8R+srujWejX7PyXOT6RYRhm/pqy/vYLyYLzu74SoTl3J+m7UWYD7r8
oKmZCFpHpzYtoIOfu7A4NBIh8s/fyj0PcH92fnNiqCPCZv0N/mi0u+bCnosV
ROAc3/5D6yH2SzdZKE1UIkiq6EZUFGP8P7/6zCaZCLcdy6VG0Z65IRKnE4jA
S9ndu7OECnL8tW/8Y4nYr65IhKP7hxuiX0UT4VtE5UujUux/rezMBYKIYHNf
7EoImn12u2BaABE6e1OEStCSdmXMO64QoW7PBV+eMipoL/rdNrlIhKxXe/i+
oSuL+NdcPImwbS79CWc5FVp7lvmOuROBKEzvrYu+UFbxS8+VCH6XvtUXoplP
HmFycyLCWM4xj//QdTcb3WMciOD8vI6d/RGev/fulQ32RDDdke1yGZ29tdnc
8gQRXsBmVira+HZEaYUNETTPXq78hFZmDRKXsCaCdKPZlsMVOB6nflclCyLk
jzaW+aLfnrZS7TEjwk5OWfu7aNHGrcphWL+Z3JiLmSupYLMrpIDxGBHCEgJs
NdBi374K9BsTYbZqeOMC+mHB69r2o0Q41295Pw+dGyUY9NSICIPMTy3fohWy
3e06DIlwUklhdXMV3vd2Mll8NyBCz6lbBWroJJc9DkzoppKgxVtoEwn1mAg9
Iub7H/k9aHs+zcxeXSI83GRrwlBNBd61DwkqaHGZ57MH0FKlEy4FOkTIsVa6
fQa9MbmDaQ+aKzzP8Aa6PKvSu0KbCDE09t+v0VUb70LM0es9oTl0NVQIIRpI
rwIR/JfHdZXRvUdSXKrRv8RPTnqgI+b/sEWgXY+3ZV3791zJm88W3RdwAF6h
vdJonhpo87y7Y2volwZCI/Lotg6udMVaXM+Xs1cV0Yf/Rmi6oRPaeRkBXSU4
NZKJZj0iesERLWvgkNyOLu0JzYxB3734Um0F3WRp7PQUzX9dbVDuMe5vig9t
C44/9Rk13hm9pp9mdgrN/Iv3QDray1ZCpQEdsT362ws0qDrsl8b1mD/8m7KI
Zr2mKfZvvS6cOb1fpg7rk07Wd1lcz+HU158d0X+VWfWfonv034omojmjPzGe
wP1oXPp0pgHdwHchegGd5TI8z1+P/VvV/v12uH+E7eNaxuj+Q+47d+J+X+yY
JgahbTi85QfRRvtXuD+hnT99OJ6B8aIyQme/pQH7ncRq5lCMJ9HrTPkH0Ro2
jjYXTDAf0HErZDb8+/+QS+vnjhOhuEfKxLIR65fMVP87jN8conxaFJoiVRPO
aEUEsppKXxk6xbDCQhPj3TnviBdHExUuso5+arElArevbXQnOnWeXlYOz1MA
B7HeoJkKOodGlbXO4P62xNIHoC95MzH3eRPB7Gry0QJ03Hu2saBzRJDqz/nI
8BT7Z6vPyx0+RPivpPxvM7q35OilW/5EANN+GY0WXJ+uXQMDmD+2Jh66qdBK
hZtH9V+55+P5e1rY54r2lthHc75LBOM5vh1Z6A0fkdv2BURIcPybuooWSWEY
N7yP+Uz+IaWjDZ9raEZvKicCX7fQZbcOKvT1jag1PyGCKkNCWRY6lCKnHv2U
CHaqy5Md6KaCg8vQQoTruR/OKL6kQueB/ZwPW4kg6JvstIbuVmnj0nxNBDGu
TcbZnVSIWrqkLNGH/bj+RcpLdB5nfXHUZyK4B319voaO0Rno/fgfEQoGHh9x
f43nSY3j9YVvuB6P/A7s78L8tbyNeniICEdHv/u5o+W+W6eeHibCWX6zsmy0
QZBSWeAIER4QZGTW0ZU1p86n/yCCvNWwyKtu7OellQLOTuB6Uyyd1tGJ/rZx
x7A++NY339jfQ4X0bqMXeyeJUC5+i+8auoYY29EyRYTeE6zWr9AHdwvcI08T
4U98UOo6Ov8mfbs23hdUZm3YPN6g0wxF839j/pZ6fvQaWqG0xF//D+6/gxLl
FVrXP8JiEF37nJ1eqRfr6cD5mc2zeL4XQ494oKfuunxPQC/LToReQ0fx+paz
zRFBI7NtYR3950602wK6oaBRf/9brA+8a9ed5zH/Vleku6Ef2My7taAbW+8P
ZKKvXlce2I318fDHXIV2tNMhLuUAdNOPzLBltIRSdGgr+shi/CvZd5gvonkH
OReJ2L8Rdp1GT1wfjbVBw65Ar1R0y+2yGxn/nu/zqWpBa7Q2QRda+5A7wzxa
JP33XfolIjwztreQeo/9Hk/j7/1onVPmufZoJx4pO4d/z88ZTCagl81eMRHQ
uqGaGk/QoTd65O+inycoxf5G59L/oW9G692S+ij+Ac/LeGDNp3/Pi4X32KKd
pbUIk2j9Jt7LMWgdsXs56+jWLpandeilzlx1tmUiGPTTcUyiFXqKr/Oh26bn
HXZ/xP469sO8ENqIbrLIAv14x8MkMXQ759BiNDrc82ieBPqoaJ9BNfqIksX5
f365vzvjJ1qaY1Ll37831nkxyP+JClsudGoJo19Z1iseR9vliHfuRB9zKw+P
QDu3Fu3lRndepnWWoz3ob2WyoI8Tb/EPo7l1alzp0aYFsdVGfXh/Y/xP/zfO
p6sqgjEELdH7bf4n2qzV37IY/eDgmsYAuufDubx+dE3wBc/PaPMfLlNcn6nA
VjfY/g79ZuGEph4680tcTQ/aktk0LgCtmbQtpgvdu1PvUyG6XSU+9Z+t9h3a
+x/67tAN2Tfod+qKV7b9h+t33LTiA9raeO+zI+hN5Xuj+tHv7QU5/dBsbUJ/
J9C257id7qFHqbleq+gPIcwPP6AHi+IOc+H8TiSsLzF/oYKPqXyfNPrTzVlD
DbTcFuOco2i74vHMC2i+nWyjF/49b/w+lIvWduIUu4Y+2fVhfy/an+90VTv6
87fOCMav2I/nnGOmw/7QfvrZ64PotR08pMPozxu1At5oNfUbWUT0Kc5S7xvo
zx1l93vRX0QKal6jXY55yu5bJYLD/hub6b5hv0BSSopBf9FOtVJCdy1PHfmN
drSk5Lujdd0+VLitYf/mGjadhZZmiXb8jna6fFmrAz0oOlnutU6E/mjv+BV0
FpO35DLaOeN0n1w/9t8XCw5c2yCCS5WJfxr6PPfbTUt0JLAz73N+iq47s7G7
dBMJTCc8j82g1TYKlnzpSXBIlCBu+h3rocZK0C5GEig2cHCEoWMFL8zQbSbB
3hO3lh+gzXW/PJ1DcyfWvtk6QIVa/7HdW5lJwCxl0KiGdvfZQpTaSoL1Z28L
vdDakcJ/bFlIMLE4FfFi4N/fQ6QWDLKRYDA99Nwsmuf4eAewk+CTPMsJ8UEq
iB9RqC7lIMFz9z3yUWj9N+dKnnKToG7j0a4ytIJ8Sp4HLwnKcmBzP1qJa26v
IB8JbvWc+qI5hPFWZtf6bBcJMs6NtZ1Dl3U6dFZgvx/HdLUiB53RWQCPhfB+
opkWt4h+9Y7pBIMYCc5/3B0gOUyFgcqsX0YSJHD1K3axRdt2Wn28t5cEZoXt
apXosqCbN/Jl8L7BuzF6cYQKq3mBaQ0HSSBcmtB7e+Tf76vFI57hfYTXmL/p
NTr1d0H5oCYJNkUeyJQZpYLF80+/LuuSYJG/JdIe/Z1qujRiQIKpKvPzsWjd
AUGrK8Yk+DxxTvcH+uytA6s/LEjQQ16S5/uB/fWPy1ZdNiRoFaXw66M/zYxs
eXuSBBUn7vy+gz6+LHdL3RXvTy2fcp1+4v2J/uvuuCskIDh5xieik8p4Gf2C
SBC49DegAd3IxxwYGk4CDwUOU/4xzM9ZUXIrMSQ4fEN/9T06J87zQUkuCVQO
vv3BOE6FM7aXfz4uIIH0G+e3ymgho/rZiQck4NsSWpSKziVuudFaS4Jpv0d2
xyewv18NWXB/RwL+pMJDkehLpnV3bL6QQO/+bcEKtLJS+1LgMAmu9cd93/mL
CvsqFU7Yz5FA55jbmWF0MuM7p5xdZDjvddJ4x+S//G+6oiROhmyCmawxOkl3
JYZBjgy/ajVmStFip6e3mmmTIWsPb2DIFNaDU3mn88+ToRlY7EvQbTL1R1kD
yTBxik5zAM2zsSL1KJoMkPZrw2CaCh/5l+Qe38D79vpzCvcM9vN9lJaGLjJo
fvLPvv8b823HrOUObQp4/j0X9AXNoTbelGFOgVR211Mcf/B8fv7+4YQzBUb1
THf7oz8zKI6WRVIgpXwvDf5SYeeG+lDdcwoMxX2s/jhLhR2dTOYU+xhgp76+
xjKH5+lE3lyKTwyoPW0J1kLnTZ82GSXEQMJC6eG7aHq3Ejb/hzFw0D2m1Wce
4/G3j/g+hliI01L/sHkR402WJZX9SSxID7XaHECHVMnQH/kQCy9jrN+7o3sU
HgpWTMYCy7uL71rQo19seT2F4iDuLLU3aunf74fZtGYj4iA+m6d7bZkK700D
HhAt4iHh92Tb3BoVrAtP3JwVSwTZ7BDDPeuYH2zEJN9rJ0Kn5tY2a3R0yQ3R
QedEYIuRaK1Arzg9twjMTYQE4VPPL21gP1alO24snAQJJu3Nk3Q0uNof0Xxq
dzLI/rYBoU00KBuLNLx0JBk6s4aeHEMfEKhhuXg6GdgG15seoKuT1FYZcpMh
IfBAozc9DcaV9hS93JYCssItmtfRb/5eZ1oSTIHOFvOGdvS7ksNn/8qkABvH
+XpJBhoY8pHLFY+mQGLBnccj6PXAHS9mIlIgQbL2KC8jDWT9UiY9E9D3X/fp
oB8V3o/xvoaWGfK+hN4Q8JefuosuXlzKRVcUOYyPlaAV2OO60KcnGTUsHqPL
xfnX0FThGzw7W9DK6kUym2lAI7z6tr8TXWV6yB59Zf+d6NR3aFX3lzHo55M3
zu/7gn4cZF+DDgtTSJ0YRGskj4+gJy/uInT8TIH4xnvBvEz4fKEisHIyBeKO
1LHoohuY73jf+o1+2p1zCd3SzSHgP4vWHZHOQ1sefXZYdh79YrmuC60/IJ5S
8c+GnCZraN65c/Mrc+iOPf/JbKGBc/540fxftInGOXv0H05vt8wZ9GvzlRj0
d7Jv5MsJtJlnfA36eb3kkdgR9JsQgVF0uInZ1IuvaKvUB7zMNLh4r35PAM43
9j1VQxd9/nj4RkpHCsScaHh1CU23+MyCoxHd9+ZUHlqdpvZzAtc35tSPiS70
p9DqevFc9NfVkDX07t3391Ynok9zs8lupYHnWD1vQTB6QPKmPbrnr5jsnAd6
xLKhBv04/0Vvnyra68yxUXRh5Y/jZGH0WNgXXhYaaJa9/NjCgJ4sXL2E5u9x
PUrKSAbK3LqmLCsNDs+UU/ZnJAH5Ku9re3RQQCNxwwy9tM8xFt1KGfhdzIJe
sw4bRSv7XBtvDUsE8uYHjXlsNHid8HLqrmsCkCnNx7vRj0KaInYLobd++LqG
frFR7X79UzyQt21at99GgyRKvICrFTqZLykW3Zx87iA3D5pLVrgWnaN9tZTw
Lg5I208c3s5OA925RTUFxzggZp/v0kUzeBwNvyuB3kVw8kOzJRrUGE3FAlGo
OLwbfe6JCe10DDr3Gfv6v89/Kv82aIcW/XRbloMGUlNP7tTJoPcwPIlFn504
Un/6UwzUSkbpN6DpfZc9lkti4Ne+jVdT6Gt7EmkHY2JARDbMUpQTz9MHNyVG
9xiwll/5ZIWOPyDNZa4TAzGKQafJaKGR9N2bxWOgQWlhpBYt0/gzmI0pBiRU
//4R4qJBimyPWlkvBezULwWZo6fab6TuaqDgeZjeIKAjuvueXaRRoFnrArkK
3eQvHH0tgwKzRybYfqLfV+rfD4qmgJSOdzo/Nw2Oz/c4LF2mgIPej13H0TG/
rh9e98D8bOCRF4G+v0qIu3iSAi+MhvY+QvuHvFE6YEqBZWOX4mE06/svc6p6
FJA/3q+8g4cGHx/V+rhoUMDVzLHuKPq7a6DoTWUKZFn8B6For9Xc6LeyFHhp
dbKtBF1de2zT7F4KrNt8PD6A5jVP2xgXpYCSnc07Hl4a/D4W8YUqhPXF/q29
AfpnqvwkHz8FchwsBgLRhZu0g2V2UKDLqdvrAboxiqP+PS8F6F2OT31Fi6T8
172FhwIH3V5d4dxOA46zGvWVXBQ463F0RQctbTdv38NJgdtebVH+6Lxd4c5m
6F5vfeZC9GC2zFFJNNP5lqTP6KU1J1tT9CEf7e3b+GhgMX+LVI/28X1y4wj6
lUhrjCd+/x0/LTE/dHqTR5MhNwU+XKkvvIeWYjoqbYfjYbmqrvAR/YBi6JOK
4z0cVFO1dQeehwv2LZPbKUANq3jmgz5wkc5iZScFPkfsP5qPXuTxrrqL82cn
lHa/RTtlsF11FKRAAPnBF7WdNIhaHW1b3E0Bg+S78/S7aDAWqiyZKkmB4FTR
sAP/rG2UFb2PAiXpuQxn0BWne54EyVCA79oNztfoatnEpksKWK/z0qWz+WkQ
eWN9mqpKAf67XOUd6IjwXYqv1Cl4f0pWXf33nNn+7Srud/X9eD0XARyvtJ5c
OlBg/MHWV+lox0dawus6FBAuoVi0or/8h+VbnwKUR9FOMoI04IlL6xozpoDi
kesEe3RflaVx/nGc76sSaiy6gsNnezj2E0S75y9r0cfa/5oSrTDeRvqmfqDL
+Nstam0p8OnSNPcOIYzPli+VwvYUiFpnVDVA85DOmzQ4UuDdDsWIe+j9HdVJ
5Rjf4ff0775Fj5TbcvGexfOw/1QbvTAN6nMzLrf44P43+k7sRx8QFXz8As9H
iDGZwwXdbtEpJhpEAYmPN5RT0O9u0+S/hGP8uZWfeIKmpBZmrxEpIBb2JVdo
N+aHk4s3ktMo0Ln1T8sxtJtQzWf2HAr4Z235GYLu28vfwHUH10dciO0Bek31
jEReEQXaS5UUP6NjO1MUn1VQwE/TyHqrCA2s8ytVIhspINjhGKiGLmzyqhts
o8DFwZjmLDRvc+DF2m8U2Hnx9vAL9Ma66n2tCQo8W6lgnkNHvQi6HL+I+729
39xKFPOb/a0c6vYYaM6fvUJAL3se1KLsiQFveZbr5eivhTF/bA9iPjI8MMAh
RgNVnUD5CezPPN8Zbz6CHtpWn9+C/Rmni/M+H7Q3ofDvo+gYcAuOv9SJ1joR
xbBeFgNsW/IzV9BE5d7wCx0xUJ1e/VhaHPPXiUJtgaEYYCke2BSLtl/cyDjB
HwuV6gt7atFfVkoyFlVjwbGVzfgH2n3lxd1V21go61dN05egQUJu0Hmz67Fw
gjtJjH4PDTo1eG/8VogDuty7BvvR7z6/Wg8/GQdFMo/POqNF6VtDC4hxsK43
/KgJ3d22N7ezPw7uXT2kG4It6etoya319+PBlNHcqwitFjfUcfx7PCymeMT3
oXOZzp+N2JkAJkUpb1UlaVAeU+xdkpgAf76Mus2iWXfMsEbHJULPmHu4pBQN
mOwMmFjfJkLJ/OA1e/SkRiOdnFASnOXsf938z6x3KAtVSTCg+1E1cR8NRjle
U08tJENPURvrXhkadIxnS3lYpEJJjf7ek+irPSNWo6GpkPC8BXswGmw79bTN
uTAVjL498f+DdvF3imLYSIUnXLX9TbLY/xj8sjx1Pw1KAgsrTsjjfOT8ZHJH
0yGBtLcrDt1aec1fkzUDzqbd+9mILr75t5FDIQP2PswTklDA/PtfaevhKxnA
+FhY7QRavZPwMDkzAwZf3LSMQ3N/bnhPV50Bt/qvUWbQCT8aLQ7OZkDwL747
4oo0GNjmmzLHlQl2SxkNtmjLIc+vL+UzgZcn9XcD2jS8PLbSIxMSDGJPxe6n
wR4e+eHE9kw4a7UloAEta1TxkL4/E4ycSSnT6Kckj8GM2UxgDI56YaOE68v/
yldIKAsGyRv9Meir09Vh/IpZ0JwetlyPjnw3aaajkwUhxUEKYsrYv7z/fkbM
PQvs6haO2qAvj84cGrqcBQfb/N1j0NbDMv/1E7Lgz/dL16fQxieIIrm3s6Bn
crpCVIUGdSpix849yIKS5Qtd1ui28r1G5JosOMt7lqEeLdgXbNzwOguaHkTU
j6NFKz7sOPQxC7h0My/zH6CBSai2lvz3LHD/XCRjjBYN8Kq6+TMLai81DwWh
m5MMrsTOZAHb1g837qNvf5X3WFzIgtN5E1Z96LsX585MrmcBUzffc7WDNIje
TZkKZM0Ge0/Z0DPos0y/pvm4sqF4TVvlGjr5/QadMV820GWe+NWGFvM++Xi7
QDZYy164t4DW9ft4O2x3NhS2EBwkVbE/OvlLgiSeDSv213hPoLW8mR8qSGaD
6Z/iTjL6BL1IVKR0NtyJbSFWoz9fM/kaLJcN8yJ9mqNo1ksRI6KK2XC0dmp2
uxoNHLhPFgUqZcNNM8ZifXRMAp0UQSUbZkZ3efiji5oFDLQPZoNeuIJQAbp9
5c3HWtVsyN6u//4dOt7o240JtWwYf2ifyKiO71so0fying2H9Xz1VdBaiynm
iYeyIe0/0pob+tXDkZObNLJhxO9GVTp6jMW17RBajaX8Qgt65ovNrAY6Ib91
z1+0h9Cy1Bb0d7UvX8UO4f76vci5jd+n3PM70xId8ePFeUY02WuLKQG9bdtG
6SF8/+d1QaZH6I/tr9x0cXzyWUpNA+hEQd0AERx/lJxRAJcGDQSO5j5/eyAb
3j13lNdGa9VTBU7j/KUcLo/6ov9o8ak9x/UJ/RtzOw9dvsLaxrg/G7rjbtv2
oK8P+XmKKWRDwOOOVgVNvC/9aGFcwfV/ad4ffhqdFmW0UCuVDUI/Zw8ma/7r
nwwHT+7Nhud8IrQpdJQPbe6oaDZwXwmgFGvRoKZO4cFmjAdP1oQjX9G1Y/tP
rnNnw+M7+QtshzHfuib6DXFkg/ObTq/zaHYKQ2/A1mwokRc3kjlCA0Zex9z/
VrLAeKyb+T7QQNF4vfjYtyxYc7jw5iNafWx+e/TnLCjrYclh0qaBgmWe8KMP
WbCjVl/GHe2/deem1a4sGCbXH9+tg/vFv4Vs8iQLIiRoaZm6NNg6cN1RITcL
Kk+HCxIMaFC690nKZqcs8HorMFKGVlCvHJs/mQX8ho+L+9EuhZ/ujdlkQZT8
7GEtQ7yv1BIa3h7PAtM1b5dF9Kl5p4hGrSwYy7Gh+hzF93vmNq5gvhD+IKt4
6hgNCMeuFKZ/zwSml0rTieg/TssylC+ZMNmoVtKM5qv/lBn+KRMaCvRk9x7H
+JFbVQrqyQR7fwep32gBgSvct5szIYs3QYRihvG7aDxemJ8J7FYTnBWWNCi4
o6D3wjMT5g1+d4+gX7ZYj6u5ZcLXQwtJO61osOU/v9Cy05nwUIxhWzj6/M9V
2wd2mWD8h3/rUWvsF1g1IruNM4Gcaryp3wbzGTFSuUshEza67/9mOYn3F+XI
HPJqBjiYGpoeQm9stPncW8qAus7hIm800/MxlRfzGXClY7d7O/rXVXUKx+8M
+Pks8wPJHvMrc+LH1pEM6K2KqqdzwH7IIam1oTsD7t04SZp3wv6i87rpg4IM
MPLaumvQnQYHhfKSXtplQJ8Hx/ntHjSYl17MP2GL9cN9+xMjdEipnvgPqwxI
dBH1KEU3Wvc5bzPD7z+lXh7qSQM9W1WXAP0McDT3PrrjzL/7gq9tjVIG+Kl3
BB07h/fVRmmnr+xYT1hjP1dfosGdmzUlHK/TIWmU7/AY2v3xpy+Sr9Ih8um9
fAE/jL+S5fvaHengerX5TCQ6UdJ3Z/CLdNg7tDB/9DKOx9Jk63pjOpTVefJ8
vYL347wfzual6fDMW+8YQyANNOREv3Cmp8OPto1Gs3Aa9JaNltxwSgdTuT1P
wtGPnfsNJR3ToTLNuLkYbUCgjlacSgeCY+Yz1gjMp9Wb9/fYpYPwX+m2NnR0
knIfr1U6WAvb9hyJwvrpdSb8tWE6NF95OKhApIGRcvPD2f3pcE305BbOOPy8
hJ/QMHM62Mb0jr/Owvrmy60mXZcGoQnyKhV3sN/np3/MEZIGWYVRuQ4lNCgJ
UGyf00uDxjez9xjqMZ/ujSy04kqDY9eMOXtbaeDKRhy+PZoKcmpM7UxtWH/L
0zrGR1KB/dPTCA202qo4kyq6Z4f69D305po2Ys9QKlhnS3Zdbcd44/ybsmUg
FRyzGBOEXtJg9m7xQ9J/qeCT0bTF+zUNFiwpWs09qWCmEvzkFlpV9so1PrTi
uwNXe9GhxlK6F7pT4Q9P8ahGF8bz8DpZoCsVAtJvvGDvpkHwutCzkFepEJEW
GF3Zg/GanPfOuDUVnJVUNMbQ1xtPcFFfpIJO7/QfoTfYH49b5GxCM3J7uVLQ
6eUHUh63pEJMqo22fS8NLka/3Sz3NBW893MtJaGLOh7fjmtOBeM3nWUt6K+6
Bwg/n6QCG5eeiNxbzAcvd0oVNKXCZNnGRxd01Jsd4wzoLvP65Cx096bPc66N
qVA6E2D4Cn3yhIzJs4ZUSElR2thAu9N9GhNF/w9yyhb4
       "]]}}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwt0w1IU1EUB/A1xUZImJVlWFpEi0xalEiG+ZfMirJMI0zCYtQKkRSyRWql
zo/UFGPah0uj9N4rYRYmQ3SYhIwyK8tRVESKRVBphYJSKN23ew6Mx4+z+975
eG+lOSv5hF6n08XIn3b1Rj7DM2vP7WXDNnhdyvD8zg7nxMli5RqG0JIfBzrt
5HqGwrrtlZmmEuVmhvqbMhrJbQxXx/JjI7vJnQwHR5mjz6dU+QlDUtX104GP
KD9Az4+k/FuGrt3++nAP5YcZ/LQHzqX8dwZXjn2p7yzlJxm4oy/s4RR5lmEo
0RyQGk3/N3C8a8qOmbecHMhx5pSsMJgcwrGl46m1J5S8hqPFvSeq/CjZxDGd
IhsYo/tHcyxq2zmSG07ziOe4EBuZ3mUrUt7H8WJAxutC5VSOe3/eJJqTKG/m
eP9yKmXUUqCcyXF86+f9Vd15ylaOgFRZUdF55QKOcTnO9Dg6X0H5MaqvlsP3
0PyIdge5kWOTFlaqt4UjvjLz2788qred41KGnGAU2UXzmEN2c3SukAvXkQc5
fgttIPR+fOBqX+vJXzgSnBMzHh/yOMdGQ2tIWjOdn+ZYojVsqFDWC5yTxzdc
rlb2F+r+Q1eUgwQsWhjLlMMEsgJtvf1N1M86gfaGX8J9tkZ5s8DfixmuyQXX
lLcJ1f8IeZdAhDxgfFynnCzgXbeNfESo/SWQLQKfVvsVLp6pVc4WOPZ1cNXH
DnKuwN6o8rhhJ7lY9fNgIblawCgHcMtIviGQJhf8ai35roA+vCzocBy5VXi/
p5/VdmWn8L7PJkHuFdDW2zBB7hcIlgu/7yB7qL8cO/4DJao68g==
       "]]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2750., 450.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.6471215700141487`*^9, 3.6471219319418497`*^9, 3.647122408137087*^9, 
   3.876761530534089*^9, 3.876762490853754*^9, 3.8767625764832296`*^9, 
   3.8767626929982047`*^9, {3.8767632076446276`*^9, 3.8767632193705482`*^9}, 
   3.8767636669804473`*^9, 3.876764037590603*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"n", "30.888387438813407`", "0.6469062196519203`", 
      "47.747859736815435`", "1.4549972222505221`*^-37"},
     {"p", "5.775593628801544`", "0.23300017940967724`", 
      "24.787936401741952`", "2.687663525324119`*^-26"},
     {"a1", "21.6`", "68.89545696407693`", "0.3135184952944365`", 
      "0.7554762879510801`"},
     {"a2", "78.2`", "87.35087253758627`", "0.8952400557458802`", 
      "0.3758846971803709`"},
     {"a3", "87.`", "279.5915291395995`", "0.3111682255457785`", 
      "0.7572493925487955`"},
     {"a4", "187.5`", "261.25016674123407`", "0.7177028912127625`", 
      "0.477010126482743`"},
     {"a5", 
      RowBox[{"-", "26.6`"}], "171.1106351139275`", 
      RowBox[{"-", "0.15545497789947077`"}], "0.8772254884120767`"},
     {"a6", "65.6`", "49.09319864623236`", "1.3362339755597579`", 
      "0.18884202381873638`"},
     {"w1", "2849.2`", "18.56585385357364`", "153.4645280777955`", 
      "3.262236880326447`*^-58"},
     {"w2", "2878.161248780628`", "4.556301746760214`", "631.6880243559729`", 
      "2.1551002404905187`*^-83"},
     {"w3", "2912.3`", "17.169116870198586`", "169.62433315688153`", 
      "5.41467344238669`*^-60"},
     {"w4", "2943.7`", "25.250283055832185`", "116.58087133086924`", 
      "2.494919723073605`*^-53"},
     {"w5", "2949.664960659503`", "1.3664206786611934`", "2158.679978079341`",
       "2.8390563298371114`*^-105"},
     {"w6", "2965.339638754832`", "1.3373805309292561`", 
      "2217.2744182947063`", "9.468899325615016`*^-106"},
     {"f1", "12.26`", "34.75600795855301`", "0.35274476903734764`", 
      "0.7260868364747235`"},
     {"f2", "10.626418813473233`", "10.20030256349716`", 
      "1.0417748637673723`", "0.3036203481835644`"},
     {"f3", "20.83769192960124`", "37.24912697507773`", "0.5594142365683662`",
       "0.5789224045652724`"},
     {"f4", "18.405949986768757`", "19.020999602044807`", 
      "0.9676647059490012`", "0.33888560990335315`"},
     {"f5", "3.7774552723985315`", "20.807299196094547`", 
      "0.18154471836054273`", "0.8568345953992794`"},
     {"f6", "6.358882536753385`", "2.1196278141329112`", 
      "2.9999995727337874`", "0.004576784633972408`"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Print",
 CellChangeTimes->{
  3.6471215700141487`*^9, 3.6471219319418497`*^9, 3.647122408137087*^9, 
   3.876761530534089*^9, 3.876762490853754*^9, 3.8767625764832296`*^9, 
   3.8767626929982047`*^9, {3.8767632076446276`*^9, 3.8767632193705482`*^9}, 
   3.8767636669804473`*^9, 3.876764037637477*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   SuperscriptBox["R", "2"], "\[InvisibleSpace]", "0.9960284533124241`"}],
  SequenceForm[$CellContext`R^2, 0.9960284533124241],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6471215700141487`*^9, 3.6471219319418497`*^9, 3.647122408137087*^9, 
   3.876761530534089*^9, 3.876762490853754*^9, 3.8767625764832296`*^9, 
   3.8767626929982047`*^9, {3.8767632076446276`*^9, 3.8767632193705482`*^9}, 
   3.8767636669804473`*^9, 3.876764037640469*^9}],

Cell[BoxData[
 RowBox[{"-", "3.552713678800501`*^-15"}]], "Print",
 CellChangeTimes->{
  3.6471215700141487`*^9, 3.6471219319418497`*^9, 3.647122408137087*^9, 
   3.876761530534089*^9, 3.876762490853754*^9, 3.8767625764832296`*^9, 
   3.8767626929982047`*^9, {3.8767632076446276`*^9, 3.8767632193705482`*^9}, 
   3.8767636669804473`*^9, 3.876764037643464*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"26.7`", "<", "n", "<", "36.7`"}], ",", 
   RowBox[{"0.5700000000000003`", "<", "p", "<", "10.57`"}], ",", 
   RowBox[{"11.600000000000001`", "<", "a1", "<", "21.6`"}], ",", 
   RowBox[{"68.2`", "<", "a2", "<", "78.2`"}], ",", 
   RowBox[{"77", "<", "a3", "<", "87"}], ",", 
   RowBox[{"177.5`", "<", "a4", "<", "187.5`"}], ",", 
   RowBox[{
    RowBox[{"-", "36.6`"}], "<", "a5", "<", 
    RowBox[{"-", "26.6`"}]}], ",", 
   RowBox[{"55.6`", "<", "a6", "<", "65.6`"}], ",", 
   RowBox[{"2849.2`", "<", "w1", "<", "2859.2`"}], ",", 
   RowBox[{"2871.9`", "<", "w2", "<", "2881.9`"}], ",", 
   RowBox[{"2902.3`", "<", "w3", "<", "2912.3`"}], ",", 
   RowBox[{"2933.7`", "<", "w4", "<", "2943.7`"}], ",", 
   RowBox[{"2941.6`", "<", "w5", "<", "2951.6`"}], ",", 
   RowBox[{"2957.8`", "<", "w6", "<", "2967.8`"}], ",", 
   RowBox[{"2.26`", "<", "f1", "<", "12.26`"}], ",", 
   RowBox[{"3.3000000000000007`", "<", "f2", "<", "13.3`"}], ",", 
   RowBox[{"14.2`", "<", "f3", "<", "24.2`"}], ",", 
   RowBox[{"10.8`", "<", "f4", "<", "20.8`"}], ",", 
   RowBox[{"2.0999999999999996`", "<", "f5", "<", "12.1`"}], ",", 
   RowBox[{
    RowBox[{"-", "0.09999999999999964`"}], "<", "f6", "<", "9.9`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6471215710992107`*^9, 3.647121933910962*^9, 3.647122410875243*^9, 
   3.8767615323178253`*^9, 3.8767624926130514`*^9, 3.8767625783103437`*^9, 
   3.876762695086956*^9, {3.876763207411254*^9, 3.8767632191002703`*^9}, 
   3.8767636665177174`*^9, 3.8767640376494427`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Save Data", "Section",
 CellChangeTimes->{{3.5347702856358137`*^9, 3.534770286291834*^9}, {
  3.534770323316842*^9, 3.53477032544296*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Set", " ", "output", " ", "subfolder"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{"outdir", "=", 
      RowBox[{"StringJoin", "[", "dir", "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Construct", " ", "fit", " ", "table"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fitdata", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "\"\<fitdata\>\"", "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"SFG", "/.", 
          RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"w", ",", 
           RowBox[{
            RowBox[{"Transpose", "[", "data", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Save", " ", "dataset"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"StringJoin", "[", 
      RowBox[{"outdir", ",", "\"\<\\\\\>\"", ",", 
       RowBox[{"StringDrop", "[", 
        RowBox[{"filename", ",", 
         RowBox[{"-", "5"}]}], "]"}], ",", "\"\<-plot.csv\>\""}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Join", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"raw", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"raw", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"raw", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", "fitdata"}], "}"}], 
       "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Save", " ", "fitting", " ", "parameters"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"StringJoin", "[", 
       RowBox[{"outdir", ",", "\"\<\\\\\>\"", ",", 
        RowBox[{"StringDrop", "[", 
         RowBox[{"filename", ",", 
          RowBox[{"-", "5"}]}], "]"}], ",", "\"\<-fit.csv\>\""}], "]"}], ",", 
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"fit", "[", "\"\<ParameterTable\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["R", "2"], ",", 
            RowBox[{"fit", "[", "\"\<RSquared\>\"", "]"}], ",", "\"\<\>\"", 
            ",", "\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], "]"}], ",", "5"}], 
       "]"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5333088042870717`*^9, 3.533308852897609*^9}, {
   3.5333259842271175`*^9, 3.5333259900824413`*^9}, 3.533389785622162*^9, 
   3.5333952698839903`*^9, 3.533529189399469*^9, 3.53358161313151*^9, 
   3.5335832532924705`*^9, 3.5345898760351396`*^9, 3.5345900811949573`*^9, 
   3.5345901654345384`*^9, 3.534590203124177*^9, 3.534701461726122*^9, 
   3.5347015684235277`*^9, 3.5347623177581377`*^9, {3.534767357381936*^9, 
   3.534767373206775*^9}, {3.534767484006404*^9, 3.5347675182462626`*^9}, {
   3.538351217140625*^9, 3.538351218171875*^9}, 3.6435828953144307`*^9, {
   3.6435843768871717`*^9, 3.6435843774242024`*^9}, {3.643585933478204*^9, 
   3.6435859727414494`*^9}, 3.643586091163223*^9, {3.6435861349227257`*^9, 
   3.6435861640823936`*^9}, 3.6435863032703543`*^9, {3.876763848900284*^9, 
   3.8767638510697703`*^9}, {3.8767639401620226`*^9, 
   3.8767639475821095`*^9}, {3.876764091752022*^9, 3.876764126045685*^9}},
 Background->RGBColor[1, 0.925, 0.925]],

Cell[BoxData["\<\"C:\\\\Users\\\\Joonhee\\\\Desktop\\\\New \
folder\\\\AVG-plot.csv\"\>"], "Output",
 CellChangeTimes->{
  3.8767640406885033`*^9, {3.8767641012895584`*^9, 3.87676412871247*^9}}],

Cell[BoxData["\<\"C:\\\\Users\\\\Joonhee\\\\Desktop\\\\New \
folder\\\\AVG-fit.csv\"\>"], "Output",
 CellChangeTimes->{
  3.8767640406885033`*^9, {3.8767641012895584`*^9, 3.876764128773351*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1341, 1021},
WindowMargins->{{Automatic, 356}, {43, Automatic}},
Magnification:>1.1 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 159, 2, 78, "Section"],
Cell[741, 26, 1152, 24, 151, "Input"],
Cell[1896, 52, 466, 12, 153, "Input"],
Cell[CellGroupData[{
Cell[2387, 68, 1136, 32, 131, "Input"],
Cell[3526, 102, 2501, 52, 256, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6076, 160, 147, 2, 78, "Section"],
Cell[6226, 164, 4195, 109, 677, "Input"],
Cell[10424, 275, 1213, 22, 193, "Input"],
Cell[11640, 299, 556, 8, 73, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12233, 312, 203, 3, 78, "Section"],
Cell[CellGroupData[{
Cell[12461, 319, 121, 1, 53, "Subsection"],
Cell[CellGroupData[{
Cell[12607, 324, 17345, 377, 1051, "Input"],
Cell[29955, 703, 54134, 1225, 1045, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[84150, 1935, 200, 3, 78, "Section"],
Cell[CellGroupData[{
Cell[84375, 1942, 91, 1, 53, "Subsection"],
Cell[CellGroupData[{
Cell[84491, 1947, 6490, 164, 611, "Input"],
Cell[90984, 2113, 19598, 334, 252, "Output"],
Cell[CellGroupData[{
Cell[110607, 2451, 327, 5, 24, "Print"],
Cell[110937, 2458, 327, 5, 24, "Print"],
Cell[111267, 2465, 19957, 340, 239, "Print"],
Cell[131227, 2807, 3070, 61, 412, "Print"],
Cell[134300, 2870, 498, 10, 24, "Print"],
Cell[134801, 2882, 410, 7, 24, "Print"],
Cell[135214, 2891, 329, 5, 24, "Print"],
Cell[135546, 2898, 329, 5, 24, "Print"],
Cell[135878, 2905, 19955, 340, 239, "Print"],
Cell[155836, 3247, 3074, 61, 412, "Print"],
Cell[158913, 3310, 496, 10, 24, "Print"],
Cell[159412, 3322, 359, 6, 26, "Print"]
}, Open  ]],
Cell[159786, 3331, 1559, 31, 78, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[161406, 3369, 144, 2, 78, "Section"],
Cell[CellGroupData[{
Cell[161575, 3375, 3869, 91, 271, "Input"],
Cell[165447, 3468, 194, 3, 33, "Output"],
Cell[165644, 3473, 194, 3, 90, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

